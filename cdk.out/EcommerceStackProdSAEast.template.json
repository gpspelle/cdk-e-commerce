{
  "Resources": {
    "EcommerceStackProdSAEastproductstableDC6C6768": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "products"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/EcommerceStackProdSAEast-products-table/Resource"
      }
    },
    "EcommerceStackProdSAEastadminstable2199AAE8": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "email",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "email",
            "AttributeType": "S"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        },
        "TableName": "admins"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/EcommerceStackProdSAEast-admins-table/Resource"
      }
    },
    "EcommerceStackProdSAEastproducttagstable55800756": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "TAG_NAME",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "TAG_NAME",
            "AttributeType": "S"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "productTags"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/EcommerceStackProdSAEast-product-tags-table/Resource"
      }
    },
    "apiC8550315": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "e-commerce rest api gateway",
        "MinimumCompressionSize": 3500,
        "Name": "api"
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Resource"
      }
    },
    "apiCloudWatchRoleAC81D93E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/CloudWatchRole/Resource"
      }
    },
    "apiAccount57E28B43": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "apiCloudWatchRoleAC81D93E",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "apiC8550315"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Account"
      }
    },
    "apiDeployment149F129430175f9543b744cb68fd8aa48ba79ac5": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "apiaccountGET43DD0EB2",
        "apiaccountOPTIONS8E2572AD",
        "apiaccountPATCHAE20C7C9",
        "apiaccountPUTDA39F327",
        "apiaccount7E8D5771",
        "apiaccountsGETB86617AD",
        "apiaccountsOPTIONS4256F313",
        "apiaccounts738F8F89",
        "apicustomerproductGET896F0605",
        "apicustomerproductOPTIONS53EA1F03",
        "apicustomerproductDCCB8D74",
        "apicustomerproductsGET6E9158BC",
        "apicustomerproductsOPTIONS7DC47F66",
        "apicustomerproducts9CD518B6",
        "apiloginOPTIONS7404BF99",
        "apiloginPOSTAD6F9831",
        "apilogin14037FF2",
        "apiOPTIONS5A1027A6",
        "apiproductDELETEE4DDDF9A",
        "apiproductOPTIONS4D2F1755",
        "apiproductPATCHAAB8AB93",
        "apiproductPUTAA3394CE",
        "apiproduct211E8A85",
        "apiproductsGETCE98977B",
        "apiproductsOPTIONS054C0992",
        "apiproductsA7D90674",
        "apitagsGETBF6CB0C9",
        "apitagsOPTIONSF0140192",
        "apitagsPUTD8DBD01F",
        "apitagsCCC680EE"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Deployment/Resource"
      }
    },
    "apiDeploymentStagedev96712F43": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "DeploymentId": {
          "Ref": "apiDeployment149F129430175f9543b744cb68fd8aa48ba79ac5"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "apiAccount57E28B43"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/DeploymentStage.dev/Resource"
      }
    },
    "apiOPTIONS5A1027A6": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/OPTIONS/Resource"
      }
    },
    "apiaccount7E8D5771": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "account",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/Resource"
      }
    },
    "apiaccountOPTIONS8E2572AD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/OPTIONS/Resource"
      }
    },
    "apiaccountPUTApiPermissionEcommerceStackProdSAEastapi8C8BBF4APUTaccount8364E1DB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putaccountlambdaA0802262",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/PUT/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.PUT..account"
      }
    },
    "apiaccountPUTApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4APUTaccount2662E668": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putaccountlambdaA0802262",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/PUT/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.PUT..account"
      }
    },
    "apiaccountPUTDA39F327": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "putaccountlambdaA0802262",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/PUT/Resource"
      }
    },
    "apiaccountPATCHApiPermissionEcommerceStackProdSAEastapi8C8BBF4APATCHaccount9E5AAFBA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchaccountlambda837DB17F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PATCH/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/PATCH/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.PATCH..account"
      }
    },
    "apiaccountPATCHApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4APATCHaccountF874CD8A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchaccountlambda837DB17F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PATCH/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/PATCH/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.PATCH..account"
      }
    },
    "apiaccountPATCHAE20C7C9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "patchaccountlambda837DB17F",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/PATCH/Resource"
      }
    },
    "apiaccountGETApiPermissionEcommerceStackProdSAEastapi8C8BBF4AGETaccountC7DD7906": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountlambdaAF349061",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/GET/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.GET..account"
      }
    },
    "apiaccountGETApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4AGETaccountE76D4BA0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountlambdaAF349061",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/GET/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.GET..account"
      }
    },
    "apiaccountGET43DD0EB2": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getaccountlambdaAF349061",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/account/GET/Resource"
      }
    },
    "apiaccounts738F8F89": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "accounts",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/accounts/Resource"
      }
    },
    "apiaccountsOPTIONS4256F313": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiaccounts738F8F89"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/accounts/OPTIONS/Resource"
      }
    },
    "apiaccountsGETApiPermissionEcommerceStackProdSAEastapi8C8BBF4AGETaccountsB63122CA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountslambda902DEA8D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/accounts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/accounts/GET/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.GET..accounts"
      }
    },
    "apiaccountsGETApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4AGETaccounts172EDE40": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountslambda902DEA8D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/accounts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/accounts/GET/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.GET..accounts"
      }
    },
    "apiaccountsGETB86617AD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apiaccounts738F8F89"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getaccountslambda902DEA8D",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/accounts/GET/Resource"
      }
    },
    "apilogin14037FF2": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "login",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/login/Resource"
      }
    },
    "apiloginOPTIONS7404BF99": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apilogin14037FF2"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/login/OPTIONS/Resource"
      }
    },
    "apiloginPOSTApiPermissionEcommerceStackProdSAEastapi8C8BBF4APOSTlogin8CA6EBB9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postloginlambdaC7BFFE1D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/POST/login"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/login/POST/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.POST..login"
      }
    },
    "apiloginPOSTApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4APOSTloginC62140E8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postloginlambdaC7BFFE1D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/POST/login"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/login/POST/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.POST..login"
      }
    },
    "apiloginPOSTAD6F9831": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "apilogin14037FF2"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "postloginlambdaC7BFFE1D",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/login/POST/Resource"
      }
    },
    "apiproduct211E8A85": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "product",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/Resource"
      }
    },
    "apiproductOPTIONS4D2F1755": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/OPTIONS/Resource"
      }
    },
    "apiproductPUTApiPermissionEcommerceStackProdSAEastapi8C8BBF4APUTproduct55E8EBBA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putproductlambda887F64D5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/PUT/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.PUT..product"
      }
    },
    "apiproductPUTApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4APUTproduct744CD91E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putproductlambda887F64D5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/PUT/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.PUT..product"
      }
    },
    "apiproductPUTAA3394CE": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "putproductlambda887F64D5",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/PUT/Resource"
      }
    },
    "apiproductDELETEApiPermissionEcommerceStackProdSAEastapi8C8BBF4ADELETEproductD8D0F570": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteproductlambdaEA497826",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/DELETE/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/DELETE/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.DELETE..product"
      }
    },
    "apiproductDELETEApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4ADELETEproduct67DF4B88": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteproductlambdaEA497826",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/DELETE/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/DELETE/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.DELETE..product"
      }
    },
    "apiproductDELETEE4DDDF9A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteproductlambdaEA497826",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/DELETE/Resource"
      }
    },
    "apiproductPATCHApiPermissionEcommerceStackProdSAEastapi8C8BBF4APATCHproductDFCFCFD4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchproductlambdaB9500F3A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PATCH/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/PATCH/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.PATCH..product"
      }
    },
    "apiproductPATCHApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4APATCHproduct3B25EC32": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchproductlambdaB9500F3A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PATCH/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/PATCH/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.PATCH..product"
      }
    },
    "apiproductPATCHAAB8AB93": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "patchproductlambdaB9500F3A",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/product/PATCH/Resource"
      }
    },
    "apiproductsA7D90674": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "products",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/products/Resource"
      }
    },
    "apiproductsOPTIONS054C0992": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiproductsA7D90674"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/products/OPTIONS/Resource"
      }
    },
    "apiproductsGETApiPermissionEcommerceStackProdSAEastapi8C8BBF4AGETproductsF0BD8FEB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getproductslambda0220F63B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/products/GET/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.GET..products"
      }
    },
    "apiproductsGETApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4AGETproducts68D4EF9D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getproductslambda0220F63B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/products/GET/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.GET..products"
      }
    },
    "apiproductsGETCE98977B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apiproductsA7D90674"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getproductslambda0220F63B",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/products/GET/Resource"
      }
    },
    "apicustomerproductDCCB8D74": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "customer-product",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-product/Resource"
      }
    },
    "apicustomerproductOPTIONS53EA1F03": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apicustomerproductDCCB8D74"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-product/OPTIONS/Resource"
      }
    },
    "apicustomerproductGETApiPermissionEcommerceStackProdSAEastapi8C8BBF4AGETcustomerproduct2ADD00DC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductlambda7E8DD103",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/customer-product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-product/GET/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.GET..customer-product"
      }
    },
    "apicustomerproductGETApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4AGETcustomerproduct2047D736": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductlambda7E8DD103",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/customer-product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-product/GET/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.GET..customer-product"
      }
    },
    "apicustomerproductGET896F0605": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apicustomerproductDCCB8D74"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getcustomerproductlambda7E8DD103",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-product/GET/Resource"
      }
    },
    "apicustomerproducts9CD518B6": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "customer-products",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-products/Resource"
      }
    },
    "apicustomerproductsOPTIONS7DC47F66": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apicustomerproducts9CD518B6"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-products/OPTIONS/Resource"
      }
    },
    "apicustomerproductsGETApiPermissionEcommerceStackProdSAEastapi8C8BBF4AGETcustomerproducts09C3806E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductslambda79C12DA3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/customer-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-products/GET/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.GET..customer-products"
      }
    },
    "apicustomerproductsGETApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4AGETcustomerproductsF21F5657": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductslambda79C12DA3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/customer-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-products/GET/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.GET..customer-products"
      }
    },
    "apicustomerproductsGET6E9158BC": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apicustomerproducts9CD518B6"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getcustomerproductslambda79C12DA3",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/customer-products/GET/Resource"
      }
    },
    "apitagsCCC680EE": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "tags",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/tags/Resource"
      }
    },
    "apitagsOPTIONSF0140192": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apitagsCCC680EE"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/tags/OPTIONS/Resource"
      }
    },
    "apitagsPUTApiPermissionEcommerceStackProdSAEastapi8C8BBF4APUTtagsAD3B122F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "puttagslambda852785DE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/tags/PUT/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.PUT..tags"
      }
    },
    "apitagsPUTApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4APUTtags5920E432": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "puttagslambda852785DE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/tags/PUT/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.PUT..tags"
      }
    },
    "apitagsPUTD8DBD01F": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apitagsCCC680EE"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "puttagslambda852785DE",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/tags/PUT/Resource"
      }
    },
    "apitagsGETApiPermissionEcommerceStackProdSAEastapi8C8BBF4AGETtags62CB687A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "gettagslambda917EA6B4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/tags/GET/ApiPermission.EcommerceStackProdSAEastapi8C8BBF4A.GET..tags"
      }
    },
    "apitagsGETApiPermissionTestEcommerceStackProdSAEastapi8C8BBF4AGETtagsB0B8F36E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "gettagslambda917EA6B4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/tags/GET/ApiPermission.Test.EcommerceStackProdSAEastapi8C8BBF4A.GET..tags"
      }
    },
    "apitagsGETBF6CB0C9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apitagsCCC680EE"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "gettagslambda917EA6B4",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/api/Default/tags/GET/Resource"
      }
    },
    "adminauthlambdaServiceRole16E8F46B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/admin-auth-lambda/ServiceRole/Resource"
      }
    },
    "adminauthlambda5ADA16C5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameterscc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929fS3BucketAE59210E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterscc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929fS3VersionKeyECE667E7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterscc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929fS3VersionKeyECE667E7"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "adminauthlambdaServiceRole16E8F46B",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "REGION": "sa-east-1",
            "ACCOUNT": "453299922179",
            "STAGE": "dev",
            "API_ID": {
              "Ref": "apiC8550315"
            },
            "ACCESS_TOKEN_NAME": "x-access-token"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "adminauthlambdaServiceRole16E8F46B"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/admin-auth-lambda/Resource",
        "aws:asset:path": "asset.cc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929f",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "adminauthlambdaEcommerceStackProdSAEastjwttokenadminauth7C8B44B2Permissions98609120": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "adminauthlambda5ADA16C5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/authorizers/",
              {
                "Ref": "jwttokenadminauth00C9E0A9"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/admin-auth-lambda/EcommerceStackProdSAEastjwttokenadminauth7C8B44B2:Permissions"
      }
    },
    "jwttokenadminauth00C9E0A9": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "Name": "EcommerceStackProdSAEastjwttokenadminauth7C8B44B2",
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Type": "TOKEN",
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "adminauthlambda5ADA16C5",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "IdentitySource": "method.request.header.x-access-token"
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/jwt-token-admin-auth/Resource"
      }
    },
    "emailauthlambdaServiceRole678A063B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/email-auth-lambda/ServiceRole/Resource"
      }
    },
    "emailauthlambda1EBD14F9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3Bucket438CC9FB"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3VersionKey5BB10098"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3VersionKey5BB10098"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "emailauthlambdaServiceRole678A063B",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "ACCESS_TOKEN_NAME": "x-access-token"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "emailauthlambdaServiceRole678A063B"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/email-auth-lambda/Resource",
        "aws:asset:path": "asset.93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeed",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "httpapiE8E4C45A": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "CorsConfiguration": {
          "AllowCredentials": false,
          "AllowHeaders": [
            "Content-Type",
            "X-Amz-Date",
            "Authorization",
            "X-Api-Key"
          ],
          "AllowMethods": [
            "OPTIONS",
            "GET",
            "POST",
            "PUT",
            "PATCH",
            "DELETE"
          ],
          "AllowOrigins": [
            "*"
          ]
        },
        "Description": "e-commerce http api gateway",
        "Name": "http-api",
        "ProtocolType": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/Resource"
      }
    },
    "httpapiDefaultStage7AF19DCA": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "StageName": "$default",
        "AutoDeploy": true
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/DefaultStage/Resource"
      }
    },
    "httpapiPOSTsendverifyemailSendVerificationEmailIntegrationPermission1AA6FA81": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sendverificationemaillambdaFC2DD3A6",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/*/*/send-verify-email"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/POST--send-verify-email/SendVerificationEmailIntegration-Permission"
      }
    },
    "httpapiPOSTsendverifyemailSendVerificationEmailIntegration97ADF400": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "sendverificationemaillambdaFC2DD3A6",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/POST--send-verify-email/SendVerificationEmailIntegration/Resource"
      }
    },
    "httpapiPOSTsendverifyemailC6D01FCD": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "RouteKey": "POST /send-verify-email",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "httpapiEmailVerificationAuthorizer0BA5A02E"
        },
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "httpapiPOSTsendverifyemailSendVerificationEmailIntegration97ADF400"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/POST--send-verify-email/Resource"
      }
    },
    "httpapiEmailVerificationAuthorizer0BA5A02E": {
      "Type": "AWS::ApiGatewayV2::Authorizer",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "AuthorizerType": "REQUEST",
        "Name": "EmailVerificationAuthorizer",
        "AuthorizerPayloadFormatVersion": "2.0",
        "AuthorizerResultTtlInSeconds": 300,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "emailauthlambda1EBD14F9",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "EnableSimpleResponses": true,
        "IdentitySource": [
          "$request.querystring.x-access-token"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/EmailVerificationAuthorizer/Resource"
      }
    },
    "httpapiEcommerceStackProdSAEasthttpapiEmailVerificationAuthorizerD9E8CCC5PermissionED0F9E5A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "emailauthlambda1EBD14F9",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/authorizers/",
              {
                "Ref": "httpapiEmailVerificationAuthorizer0BA5A02E"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/EcommerceStackProdSAEasthttpapiEmailVerificationAuthorizerD9E8CCC5-Permission"
      }
    },
    "httpapiGETverifyemailEmailVerificationIntegrationPermissionFAF45894": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getverificationemail6C977FFB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/*/*/verify-email"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/GET--verify-email/EmailVerificationIntegration-Permission"
      }
    },
    "httpapiGETverifyemailEmailVerificationIntegrationB462BD01": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "getverificationemail6C977FFB",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/GET--verify-email/EmailVerificationIntegration/Resource"
      }
    },
    "httpapiGETverifyemailDD0CBD29": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "RouteKey": "GET /verify-email",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "httpapiEmailVerificationAuthorizer0BA5A02E"
        },
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "httpapiGETverifyemailEmailVerificationIntegrationB462BD01"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/GET--verify-email/Resource"
      }
    },
    "httpapiPOSTsendforgotpasswordemailSendForgotPasswordEmailIntegrationPermission7201964C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sendforgotpasswordemaillambda73B2C8A0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:453299922179:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/*/*/send-forgot-password-email"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/POST--send-forgot-password-email/SendForgotPasswordEmailIntegration-Permission"
      }
    },
    "httpapiPOSTsendforgotpasswordemailSendForgotPasswordEmailIntegrationC11B5857": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "sendforgotpasswordemaillambda73B2C8A0",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/POST--send-forgot-password-email/SendForgotPasswordEmailIntegration/Resource"
      }
    },
    "httpapiPOSTsendforgotpasswordemailAA2B2381": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "RouteKey": "POST /send-forgot-password-email",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "httpapiPOSTsendforgotpasswordemailSendForgotPasswordEmailIntegrationC11B5857"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/http-api/POST--send-forgot-password-email/Resource"
      }
    },
    "eCommerceAmplifyAppRoleC40BBB51": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "amplify.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/eCommerceAmplifyApp/Role/Resource"
      }
    },
    "eCommerceAmplifyApp2D763A71": {
      "Type": "AWS::Amplify::App",
      "Properties": {
        "Name": "eCommerceAmplifyApp",
        "BasicAuthConfig": {
          "EnableBasicAuth": false
        },
        "BuildSpec": "version: \"1.0\"\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - npm install\n    build:\n      commands:\n        - npm run build\n  artifacts:\n    baseDirectory: build\n    files:\n      - \"**/*\"\n  cache:\n    paths:\n      - node_modules/**/*\n",
        "CustomRules": [
          {
            "Source": "</^[^.]+$|\\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/>",
            "Status": "200",
            "Target": "/index.html"
          }
        ],
        "EnvironmentVariables": [
          {
            "Name": "REACT_APP_REST_API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "apiC8550315"
                  },
                  ".execute-api.sa-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/",
                  {
                    "Ref": "apiDeploymentStagedev96712F43"
                  },
                  "/"
                ]
              ]
            }
          }
        ],
        "IAMServiceRole": {
          "Fn::GetAtt": [
            "eCommerceAmplifyAppRoleC40BBB51",
            "Arn"
          ]
        },
        "OauthToken": "{{resolve:secretsmanager:github-access-token:SecretString:::}}",
        "Repository": "https://github.com/gpspelle/e-commerce"
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/eCommerceAmplifyApp/Resource"
      }
    },
    "eCommerceAmplifyAppmaster50213BEE": {
      "Type": "AWS::Amplify::Branch",
      "Properties": {
        "AppId": {
          "Fn::GetAtt": [
            "eCommerceAmplifyApp2D763A71",
            "AppId"
          ]
        },
        "BranchName": "master",
        "EnableAutoBuild": true,
        "EnablePullRequestPreview": true
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/eCommerceAmplifyApp/master/Resource"
      }
    },
    "ecommercedomainCBB36F34": {
      "Type": "AWS::Amplify::Domain",
      "Properties": {
        "AppId": {
          "Fn::GetAtt": [
            "eCommerceAmplifyApp2D763A71",
            "AppId"
          ]
        },
        "DomainName": "alojinha.click",
        "SubDomainSettings": [
          {
            "BranchName": {
              "Fn::GetAtt": [
                "eCommerceAmplifyAppmaster50213BEE",
                "BranchName"
              ]
            },
            "Prefix": ""
          }
        ],
        "AutoSubDomainCreationPatterns": [
          "*",
          "pr*"
        ],
        "EnableAutoSubDomain": false
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/e-commerce-domain/Resource"
      }
    },
    "eCommerceAdminAmplifyAppRoleD08EF328": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "amplify.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/eCommerceAdminAmplifyApp/Role/Resource"
      }
    },
    "eCommerceAdminAmplifyAppF8F89BE8": {
      "Type": "AWS::Amplify::App",
      "Properties": {
        "Name": "eCommerceAdminAmplifyApp",
        "BasicAuthConfig": {
          "EnableBasicAuth": false
        },
        "BuildSpec": "version: \"1.0\"\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - npm install\n    build:\n      commands:\n        - npm run build\n  artifacts:\n    baseDirectory: build\n    files:\n      - \"**/*\"\n  cache:\n    paths:\n      - node_modules/**/*\n",
        "CustomRules": [
          {
            "Source": "</^[^.]+$|\\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/>",
            "Status": "200",
            "Target": "/index.html"
          }
        ],
        "EnvironmentVariables": [
          {
            "Name": "REACT_APP_REST_API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "apiC8550315"
                  },
                  ".execute-api.sa-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/",
                  {
                    "Ref": "apiDeploymentStagedev96712F43"
                  },
                  "/"
                ]
              ]
            }
          },
          {
            "Name": "REACT_APP_HTTP_API",
            "Value": {
              "Fn::GetAtt": [
                "httpapiE8E4C45A",
                "ApiEndpoint"
              ]
            }
          },
          {
            "Name": "REACT_APP_ACCESS_TOKEN_NAME",
            "Value": "x-access-token"
          },
          {
            "Name": "REACT_APP_NO_TAGS_STRING",
            "Value": "!@#$no-tag%^&*"
          }
        ],
        "IAMServiceRole": {
          "Fn::GetAtt": [
            "eCommerceAdminAmplifyAppRoleD08EF328",
            "Arn"
          ]
        },
        "OauthToken": "{{resolve:secretsmanager:github-access-token:SecretString:::}}",
        "Repository": "https://github.com/gpspelle/admin-e-commerce"
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/eCommerceAdminAmplifyApp/Resource"
      }
    },
    "eCommerceAdminAmplifyAppmasterC3195E9C": {
      "Type": "AWS::Amplify::Branch",
      "Properties": {
        "AppId": {
          "Fn::GetAtt": [
            "eCommerceAdminAmplifyAppF8F89BE8",
            "AppId"
          ]
        },
        "BranchName": "master",
        "EnableAutoBuild": true,
        "EnablePullRequestPreview": true
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/eCommerceAdminAmplifyApp/master/Resource"
      }
    },
    "ecommerceadmindomain10A1D5C6": {
      "Type": "AWS::Amplify::Domain",
      "Properties": {
        "AppId": {
          "Fn::GetAtt": [
            "eCommerceAdminAmplifyAppF8F89BE8",
            "AppId"
          ]
        },
        "DomainName": "alojinha.click",
        "SubDomainSettings": [
          {
            "BranchName": {
              "Fn::GetAtt": [
                "eCommerceAdminAmplifyAppmasterC3195E9C",
                "BranchName"
              ]
            },
            "Prefix": "admin"
          }
        ],
        "AutoSubDomainCreationPatterns": [
          "*",
          "pr*"
        ],
        "EnableAutoSubDomain": false
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/e-commerce-admin-domain/Resource"
      }
    },
    "putaccountlambdaServiceRoleA8C81C5B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/put-account-lambda/ServiceRole/Resource"
      }
    },
    "putaccountlambdaServiceRoleDefaultPolicy8B416564": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastadminstable2199AAE8",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "putaccountlambdaServiceRoleDefaultPolicy8B416564",
        "Roles": [
          {
            "Ref": "putaccountlambdaServiceRoleA8C81C5B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/put-account-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "putaccountlambdaA0802262": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21S3Bucket2B19B31B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21S3VersionKey742DA0DD"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21S3VersionKey742DA0DD"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "putaccountlambdaServiceRoleA8C81C5B",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "ADMINS_TABLE": "admins",
            "ADMINS_TABLE_PARTITION_KEY": "email",
            "HASH_ALG": "sha512"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "putaccountlambdaServiceRoleDefaultPolicy8B416564",
        "putaccountlambdaServiceRoleA8C81C5B"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/put-account-lambda/Resource",
        "aws:asset:path": "asset.2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "patchaccountlambdaServiceRole3527FE65": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/patch-account-lambda/ServiceRole/Resource"
      }
    },
    "patchaccountlambdaServiceRoleDefaultPolicy8E18B8B9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastadminstable2199AAE8",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "patchaccountlambdaServiceRoleDefaultPolicy8E18B8B9",
        "Roles": [
          {
            "Ref": "patchaccountlambdaServiceRole3527FE65"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/patch-account-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "patchaccountlambda837DB17F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9baS3BucketB929A855"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9baS3VersionKeyBA5E3555"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9baS3VersionKeyBA5E3555"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "patchaccountlambdaServiceRole3527FE65",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "ADMINS_TABLE": "admins",
            "ADMINS_TABLE_PARTITION_KEY": "email",
            "HASH_ALG": "sha512"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "patchaccountlambdaServiceRoleDefaultPolicy8E18B8B9",
        "patchaccountlambdaServiceRole3527FE65"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/patch-account-lambda/Resource",
        "aws:asset:path": "asset.9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9ba",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getaccountlambdaServiceRoleF2B2CA18": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-account-lambda/ServiceRole/Resource"
      }
    },
    "getaccountlambdaServiceRoleDefaultPolicyAD873E92": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastadminstable2199AAE8",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getaccountlambdaServiceRoleDefaultPolicyAD873E92",
        "Roles": [
          {
            "Ref": "getaccountlambdaServiceRoleF2B2CA18"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-account-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getaccountlambdaAF349061": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8S3Bucket0B6FFEAF"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8S3VersionKey86738E95"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8S3VersionKey86738E95"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getaccountlambdaServiceRoleF2B2CA18",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "ADMINS_TABLE": "admins"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getaccountlambdaServiceRoleDefaultPolicyAD873E92",
        "getaccountlambdaServiceRoleF2B2CA18"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-account-lambda/Resource",
        "aws:asset:path": "asset.21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getaccountslambdaServiceRoleCF9DA346": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-accounts-lambda/ServiceRole/Resource"
      }
    },
    "getaccountslambdaServiceRoleDefaultPolicyF14E7A9E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastadminstable2199AAE8",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getaccountslambdaServiceRoleDefaultPolicyF14E7A9E",
        "Roles": [
          {
            "Ref": "getaccountslambdaServiceRoleCF9DA346"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-accounts-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getaccountslambda902DEA8D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04S3Bucket23BA6318"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04S3VersionKeyC217D2D2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04S3VersionKeyC217D2D2"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getaccountslambdaServiceRoleCF9DA346",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "ADMINS_TABLE": "admins"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getaccountslambdaServiceRoleDefaultPolicyF14E7A9E",
        "getaccountslambdaServiceRoleCF9DA346"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-accounts-lambda/Resource",
        "aws:asset:path": "asset.5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "postloginlambdaServiceRole5FBE01F4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/post-login-lambda/ServiceRole/Resource"
      }
    },
    "postloginlambdaServiceRoleDefaultPolicyA9899A24": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastadminstable2199AAE8",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "postloginlambdaServiceRoleDefaultPolicyA9899A24",
        "Roles": [
          {
            "Ref": "postloginlambdaServiceRole5FBE01F4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/post-login-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "postloginlambdaC7BFFE1D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersd853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67dS3Bucket4A7FE120"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersd853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67dS3VersionKey47C8E3AC"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersd853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67dS3VersionKey47C8E3AC"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "postloginlambdaServiceRole5FBE01F4",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "REGION": "sa-east-1",
            "ADMINS_TABLE": "admins",
            "ADMINS_TABLE_PARTITION_KEY": "email",
            "HASH_ALG": "sha512"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "postloginlambdaServiceRoleDefaultPolicyA9899A24",
        "postloginlambdaServiceRole5FBE01F4"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/post-login-lambda/Resource",
        "aws:asset:path": "asset.d853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67d",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getproductslambdaServiceRoleEDEF75F9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-products-lambda/ServiceRole/Resource"
      }
    },
    "getproductslambdaServiceRoleDefaultPolicyE01DE73D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproductstableDC6C6768",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getproductslambdaServiceRoleDefaultPolicyE01DE73D",
        "Roles": [
          {
            "Ref": "getproductslambdaServiceRoleEDEF75F9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-products-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getproductslambda0220F63B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3Bucket45DEBC6B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3VersionKeyBD68D59C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3VersionKeyBD68D59C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getproductslambdaServiceRoleEDEF75F9",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "PRODUCTS_TABLE": "products"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "getproductslambdaServiceRoleDefaultPolicyE01DE73D",
        "getproductslambdaServiceRoleEDEF75F9"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-products-lambda/Resource",
        "aws:asset:path": "asset.f616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cec",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getcustomerproductlambdaServiceRoleF7F7DF3F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-customer-product-lambda/ServiceRole/Resource"
      }
    },
    "getcustomerproductlambdaServiceRoleDefaultPolicyAB8C18AB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproductstableDC6C6768",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getcustomerproductlambdaServiceRoleDefaultPolicyAB8C18AB",
        "Roles": [
          {
            "Ref": "getcustomerproductlambdaServiceRoleF7F7DF3F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-customer-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getcustomerproductlambda7E8DD103": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3Bucket90EA2ADD"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3VersionKey4001853F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3VersionKey4001853F"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getcustomerproductlambdaServiceRoleF7F7DF3F",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getcustomerproductlambdaServiceRoleDefaultPolicyAB8C18AB",
        "getcustomerproductlambdaServiceRoleF7F7DF3F"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-customer-product-lambda/Resource",
        "aws:asset:path": "asset.22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6c",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getcustomerproductslambdaServiceRoleBBAD3B7C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-customer-products-lambda/ServiceRole/Resource"
      }
    },
    "getcustomerproductslambdaServiceRoleDefaultPolicy717367D1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproductstableDC6C6768",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getcustomerproductslambdaServiceRoleDefaultPolicy717367D1",
        "Roles": [
          {
            "Ref": "getcustomerproductslambdaServiceRoleBBAD3B7C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-customer-products-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getcustomerproductslambda79C12DA3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3Bucket9F5774BC"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3VersionKeyBD2D14C7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3VersionKeyBD2D14C7"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getcustomerproductslambdaServiceRoleBBAD3B7C",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "PRODUCTS_TABLE": "products"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "getcustomerproductslambdaServiceRoleDefaultPolicy717367D1",
        "getcustomerproductslambdaServiceRoleBBAD3B7C"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-customer-products-lambda/Resource",
        "aws:asset:path": "asset.8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549a",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "putproductlambdaServiceRole2AB129BC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/put-product-lambda/ServiceRole/Resource"
      }
    },
    "putproductlambdaServiceRoleDefaultPolicy54F4655F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproductstableDC6C6768",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproducttagstable55800756",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "putproductlambdaServiceRoleDefaultPolicy54F4655F",
        "Roles": [
          {
            "Ref": "putproductlambdaServiceRole2AB129BC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/put-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "putproductlambda887F64D5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18fS3Bucket46F8A28C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18fS3VersionKey03ECDF30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18fS3VersionKey03ECDF30"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "putproductlambdaServiceRole2AB129BC",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id",
            "PRODUCT_TAGS_TABLE": "productTags",
            "PRODUCT_TAGS_TABLE_PARTITION_KEY": "TAG_NAME",
            "IMAGES_BUCKET": "sa-e-commerce-images-bucket",
            "NO_TAGS_STRING": "!@#$no-tag%^&*"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "putproductlambdaServiceRoleDefaultPolicy54F4655F",
        "putproductlambdaServiceRole2AB129BC"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/put-product-lambda/Resource",
        "aws:asset:path": "asset.7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18f",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "deleteproductlambdaServiceRole807E7403": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/delete-product-lambda/ServiceRole/Resource"
      }
    },
    "deleteproductlambdaServiceRoleDefaultPolicy34BA7ED0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproductstableDC6C6768",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproducttagstable55800756",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteproductlambdaServiceRoleDefaultPolicy34BA7ED0",
        "Roles": [
          {
            "Ref": "deleteproductlambdaServiceRole807E7403"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/delete-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteproductlambdaEA497826": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersa32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2S3Bucket84D74DE9"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2S3VersionKeyEC055275"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2S3VersionKeyEC055275"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "deleteproductlambdaServiceRole807E7403",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id",
            "PRODUCT_TAGS_TABLE": "productTags",
            "PRODUCT_TAGS_TABLE_PARTITION_KEY": "TAG_NAME",
            "IMAGES_BUCKET": "sa-e-commerce-images-bucket"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "deleteproductlambdaServiceRoleDefaultPolicy34BA7ED0",
        "deleteproductlambdaServiceRole807E7403"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/delete-product-lambda/Resource",
        "aws:asset:path": "asset.a32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "patchproductlambdaServiceRole0B5E1A11": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/patch-product-lambda/ServiceRole/Resource"
      }
    },
    "patchproductlambdaServiceRoleDefaultPolicy3AC750CB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproductstableDC6C6768",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproducttagstable55800756",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "patchproductlambdaServiceRoleDefaultPolicy3AC750CB",
        "Roles": [
          {
            "Ref": "patchproductlambdaServiceRole0B5E1A11"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/patch-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "patchproductlambdaB9500F3A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameterse5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bbS3Bucket9C9FDE89"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bbS3VersionKeyD55AE31B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bbS3VersionKeyD55AE31B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "patchproductlambdaServiceRole0B5E1A11",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id",
            "PRODUCT_TAGS_TABLE": "productTags",
            "PRODUCT_TAGS_TABLE_PARTITION_KEY": "TAG_NAME",
            "IMAGES_BUCKET": "sa-e-commerce-images-bucket",
            "NO_TAGS_STRING": "!@#$no-tag%^&*"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "patchproductlambdaServiceRoleDefaultPolicy3AC750CB",
        "patchproductlambdaServiceRole0B5E1A11"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/patch-product-lambda/Resource",
        "aws:asset:path": "asset.e5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bb",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "puttagslambdaServiceRole37F6000D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/put-tags-lambda/ServiceRole/Resource"
      }
    },
    "puttagslambdaServiceRoleDefaultPolicy4EA0C565": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproducttagstable55800756",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "puttagslambdaServiceRoleDefaultPolicy4EA0C565",
        "Roles": [
          {
            "Ref": "puttagslambdaServiceRole37F6000D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/put-tags-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "puttagslambda852785DE": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5S3Bucket3CBBBA0B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5S3VersionKey8DB39602"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5S3VersionKey8DB39602"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "puttagslambdaServiceRole37F6000D",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "PRODUCT_TAGS_TABLE": "productTags",
            "PRODUCT_TAGS_TABLE_PARTITION_KEY": "TAG_NAME"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "puttagslambdaServiceRoleDefaultPolicy4EA0C565",
        "puttagslambdaServiceRole37F6000D"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/put-tags-lambda/Resource",
        "aws:asset:path": "asset.68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "gettagslambdaServiceRole2F6F5683": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-tags-lambda/ServiceRole/Resource"
      }
    },
    "gettagslambdaServiceRoleDefaultPolicy40148E85": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproducttagstable55800756",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "gettagslambdaServiceRoleDefaultPolicy40148E85",
        "Roles": [
          {
            "Ref": "gettagslambdaServiceRole2F6F5683"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-tags-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "gettagslambda917EA6B4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3BucketF8737F0F"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3VersionKey071F0598"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3VersionKey071F0598"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "gettagslambdaServiceRole2F6F5683",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "PRODUCT_TAGS_TABLE": "productTags",
            "PRODUCT_TAGS_TABLE_PARTITION_KEY": "TAG_NAME",
            "NO_TAGS_STRING": "!@#$no-tag%^&*"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "gettagslambdaServiceRoleDefaultPolicy40148E85",
        "gettagslambdaServiceRole2F6F5683"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-tags-lambda/Resource",
        "aws:asset:path": "asset.f926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "s3bucket64CB25AF": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": "sa-e-commerce-images-bucket",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "POST",
                "PUT"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 90
              },
              "ExpirationInDays": 365,
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30
                }
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/s3-bucket/Resource"
      }
    },
    "s3bucketPolicyF7E91061": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3bucket64CB25AF"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "s3bucket64CB25AF",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/s3-bucket/Policy/Resource"
      }
    },
    "s3bucketAutoDeleteObjectsCustomResource839C6F53": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "s3bucket64CB25AF"
        }
      },
      "DependsOn": [
        "s3bucketPolicyF7E91061"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/s3-bucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3Bucket4842F32D"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "s3bucket64CB25AF"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
        "aws:asset:path": "asset.1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1",
        "aws:asset:property": "Code"
      }
    },
    "sendverificationemaillambdaServiceRole20212DB5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/send-verification-email-lambda/ServiceRole/Resource"
      }
    },
    "sendverificationemaillambdaServiceRoleDefaultPolicy11B6C889": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:SendEmail",
                "ses:SendRawEmail",
                "ses:SendTemplatedEmail"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ses:sa-east-1:453299922179:identity/*"
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EcommerceStackProdSAEastadminstable2199AAE8",
                  "StreamArn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sendverificationemaillambdaServiceRoleDefaultPolicy11B6C889",
        "Roles": [
          {
            "Ref": "sendverificationemaillambdaServiceRole20212DB5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/send-verification-email-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sendverificationemaillambdaFC2DD3A6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3BucketE2B0E7A5"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3VersionKeyEECE885C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3VersionKeyEECE885C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "sendverificationemaillambdaServiceRole20212DB5",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SES_EMAIL_FROM": "gpsunicamp016@gmail.com",
            "REGION": "sa-east-1",
            "API_ENDPOINT": {
              "Fn::GetAtt": [
                "httpapiE8E4C45A",
                "ApiEndpoint"
              ]
            },
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "ACCESS_TOKEN_NAME": "x-access-token",
            "EMAIL_VERIFICATION_LINK_ENDPOINT": "verify-email",
            "EMAIL_SIGNATURE": "Loja das Artes"
          }
        },
        "Handler": "main.handler",
        "MemorySize": 128,
        "Runtime": "nodejs14.x",
        "Timeout": 3
      },
      "DependsOn": [
        "sendverificationemaillambdaServiceRoleDefaultPolicy11B6C889",
        "sendverificationemaillambdaServiceRole20212DB5"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/send-verification-email-lambda/Resource",
        "aws:asset:path": "asset.de307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "sendverificationemaillambdaDynamoDBEventSourceEcommerceStackProdSAEastEcommerceStackProdSAEastadminstableBE559D54B0FE1F7E": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "sendverificationemaillambdaFC2DD3A6"
        },
        "BatchSize": 1,
        "BisectBatchOnFunctionError": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "EcommerceStackProdSAEastadminstable2199AAE8",
            "StreamArn"
          ]
        },
        "MaximumRetryAttempts": 10,
        "StartingPosition": "TRIM_HORIZON"
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/send-verification-email-lambda/DynamoDBEventSource:EcommerceStackProdSAEastEcommerceStackProdSAEastadminstableBE559D54/Resource"
      }
    },
    "getverificationemailServiceRole3B5CD231": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-verification-email/ServiceRole/Resource"
      }
    },
    "getverificationemailServiceRoleDefaultPolicy9E3555C5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastadminstable2199AAE8",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getverificationemailServiceRoleDefaultPolicy9E3555C5",
        "Roles": [
          {
            "Ref": "getverificationemailServiceRole3B5CD231"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-verification-email/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getverificationemail6C977FFB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3Bucket004ACA06"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3VersionKey3279A030"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3VersionKey3279A030"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getverificationemailServiceRole3B5CD231",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "ADMINS_TABLE": "admins",
            "ADMINS_TABLE_PARTITION_KEY": "email"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 5
      },
      "DependsOn": [
        "getverificationemailServiceRoleDefaultPolicy9E3555C5",
        "getverificationemailServiceRole3B5CD231"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/get-verification-email/Resource",
        "aws:asset:path": "asset.f40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "sendforgotpasswordemaillambdaServiceRole17FE743F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/send-forgot-password-email-lambda/ServiceRole/Resource"
      }
    },
    "sendforgotpasswordemaillambdaServiceRoleDefaultPolicy3880CD2F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:SendEmail",
                "ses:SendRawEmail",
                "ses:SendTemplatedEmail"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ses:sa-east-1:453299922179:identity/*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sendforgotpasswordemaillambdaServiceRoleDefaultPolicy3880CD2F",
        "Roles": [
          {
            "Ref": "sendforgotpasswordemaillambdaServiceRole17FE743F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/send-forgot-password-email-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sendforgotpasswordemaillambda73B2C8A0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3BucketFF9F79E9"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3VersionKey21F1C838"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3VersionKey21F1C838"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "sendforgotpasswordemaillambdaServiceRole17FE743F",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SES_EMAIL_FROM": "gpsunicamp016@gmail.com",
            "REGION": "sa-east-1",
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "ACCESS_TOKEN_NAME": "x-access-token",
            "CHANGE_FORGOT_PASSWORD_LINK": "alterar-senha",
            "EMAIL_SIGNATURE": "Loja das Artes",
            "ADMIN_CUSTOM_DOMAIN": "https://admin.alojinha.click",
            "ADMINS_TABLE_PARTITION_KEY": "email"
          }
        },
        "Handler": "main.handler",
        "MemorySize": 128,
        "Runtime": "nodejs14.x",
        "Timeout": 3
      },
      "DependsOn": [
        "sendforgotpasswordemaillambdaServiceRoleDefaultPolicy3880CD2F",
        "sendforgotpasswordemaillambdaServiceRole17FE743F"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/send-forgot-password-email-lambda/Resource",
        "aws:asset:path": "asset.04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695e",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "processexpiredlightningdealsServiceRole32753C51": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/process-expired-lightning-deals/ServiceRole/Resource"
      }
    },
    "processexpiredlightningdealsServiceRoleDefaultPolicyDE7B59EF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcommerceStackProdSAEastproductstableDC6C6768",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "processexpiredlightningdealsServiceRoleDefaultPolicyDE7B59EF",
        "Roles": [
          {
            "Ref": "processexpiredlightningdealsServiceRole32753C51"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/process-expired-lightning-deals/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "processexpiredlightningdeals27B7096B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1eS3BucketBDA38A39"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1eS3VersionKey23376756"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1eS3VersionKey23376756"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "processexpiredlightningdealsServiceRole32753C51",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "sa-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 5
      },
      "DependsOn": [
        "processexpiredlightningdealsServiceRoleDefaultPolicyDE7B59EF",
        "processexpiredlightningdealsServiceRole32753C51"
      ],
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/process-expired-lightning-deals/Resource",
        "aws:asset:path": "asset.9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1e",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "cronevery5minutes7E81515A": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "processexpiredlightningdeals27B7096B",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/cron-every-5-minutes/Resource"
      }
    },
    "cronevery5minutesAllowEventRuleEcommerceStackProdSAEastprocessexpiredlightningdeals67C9CE6995F56BA7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "processexpiredlightningdeals27B7096B",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "cronevery5minutes7E81515A",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/cron-every-5-minutes/AllowEventRuleEcommerceStackProdSAEastprocessexpiredlightningdeals67C9CE69"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VS21ICMQz9Ft5LEX3w1QV09MGRQX8gdAMUtpdpUxjc2X+3F5AV9SknSZOcnHTMx3f3/GbwAAc/FPVu1ArjkLfvBGLHFuhNcALZdKXfAtlArPIeKWbXUq/Z1GhPLghKD+bgQCGhY9Pgyah+8QX/SM2d2csaXcfS+LY+alCmXvL2A5ZNLswgpq1cA+EBjryNxVRZeWp7hpUQJmhiM7SNOSrUmVPPS5xzywLOFCbgkb0ibUydkif0J/cPs0NdhfjAyc+05qrndUyCiuRM4Z3t3DRSHLM2GXWsAbWsgbcphE5J76XR7CloQQnE8Dd+3EfW73nyK1ib5V7p39GO+bshpKt4no8Tfd5Ogtgh5eUKTMUnVMyFXN/vS72/5e0zkT0rHE1yr4RMoYUJVNCLJlw7OG9z5V7e/S8jKNvIVbxzZW0Za9nEgRabzLWgmVEgc8uCOoZJGB8PEE4HiLbrOqZNjXzrR/tx/OZ8PNh6KYcu/hSpkC+K/QI9RScPBQMAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "EcommerceStackProdSAEast/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "apiEndpoint9349E63C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiC8550315"
            },
            ".execute-api.sa-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiDeploymentStagedev96712F43"
            },
            "/"
          ]
        ]
      }
    },
    "restApiUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiC8550315"
            },
            ".execute-api.sa-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiDeploymentStagedev96712F43"
            },
            "/"
          ]
        ]
      }
    },
    "httpApiUrl": {
      "Value": {
        "Fn::GetAtt": [
          "httpapiE8E4C45A",
          "ApiEndpoint"
        ]
      }
    }
  },
  "Parameters": {
    "AssetParameterscc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929fS3BucketAE59210E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"cc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929f\""
    },
    "AssetParameterscc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929fS3VersionKeyECE667E7": {
      "Type": "String",
      "Description": "S3 key for asset version \"cc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929f\""
    },
    "AssetParameterscc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929fArtifactHash61E86785": {
      "Type": "String",
      "Description": "Artifact hash for asset \"cc384fca684af5335c042fac55a94bcbba01a93d7291ecd0816020cdc347929f\""
    },
    "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3Bucket438CC9FB": {
      "Type": "String",
      "Description": "S3 bucket for asset \"93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeed\""
    },
    "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3VersionKey5BB10098": {
      "Type": "String",
      "Description": "S3 key for asset version \"93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeed\""
    },
    "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedArtifactHash95220FBD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeed\""
    },
    "AssetParameters2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21S3Bucket2B19B31B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21\""
    },
    "AssetParameters2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21S3VersionKey742DA0DD": {
      "Type": "String",
      "Description": "S3 key for asset version \"2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21\""
    },
    "AssetParameters2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21ArtifactHash81A728B2": {
      "Type": "String",
      "Description": "Artifact hash for asset \"2c44378578145369dad33dd1ec39a6a7e9bc63a3fc985cd14ae4a20ce06edf21\""
    },
    "AssetParameters9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9baS3BucketB929A855": {
      "Type": "String",
      "Description": "S3 bucket for asset \"9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9ba\""
    },
    "AssetParameters9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9baS3VersionKeyBA5E3555": {
      "Type": "String",
      "Description": "S3 key for asset version \"9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9ba\""
    },
    "AssetParameters9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9baArtifactHash32975A10": {
      "Type": "String",
      "Description": "Artifact hash for asset \"9d49e36f8e65978de0a9e7ced41be7081a7c77880d3f9e496659d3298d90d9ba\""
    },
    "AssetParameters21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8S3Bucket0B6FFEAF": {
      "Type": "String",
      "Description": "S3 bucket for asset \"21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8\""
    },
    "AssetParameters21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8S3VersionKey86738E95": {
      "Type": "String",
      "Description": "S3 key for asset version \"21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8\""
    },
    "AssetParameters21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8ArtifactHash26C19C74": {
      "Type": "String",
      "Description": "Artifact hash for asset \"21d2d90f6409e429503b61f129027ad549425ae8fc06e6d2561448259ee988a8\""
    },
    "AssetParameters5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04S3Bucket23BA6318": {
      "Type": "String",
      "Description": "S3 bucket for asset \"5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04\""
    },
    "AssetParameters5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04S3VersionKeyC217D2D2": {
      "Type": "String",
      "Description": "S3 key for asset version \"5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04\""
    },
    "AssetParameters5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04ArtifactHash902D3EA0": {
      "Type": "String",
      "Description": "Artifact hash for asset \"5468130e3eaf9ac83014c5c0e462bf7cab173255850e8faebb8e5a59152f8b04\""
    },
    "AssetParametersd853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67dS3Bucket4A7FE120": {
      "Type": "String",
      "Description": "S3 bucket for asset \"d853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67d\""
    },
    "AssetParametersd853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67dS3VersionKey47C8E3AC": {
      "Type": "String",
      "Description": "S3 key for asset version \"d853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67d\""
    },
    "AssetParametersd853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67dArtifactHash81A2801C": {
      "Type": "String",
      "Description": "Artifact hash for asset \"d853cb71e1e43754b2e9117dad5552e398c187008d846462b5335c1fa6dee67d\""
    },
    "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3Bucket45DEBC6B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cec\""
    },
    "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3VersionKeyBD68D59C": {
      "Type": "String",
      "Description": "S3 key for asset version \"f616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cec\""
    },
    "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecArtifactHash999E0266": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cec\""
    },
    "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3Bucket90EA2ADD": {
      "Type": "String",
      "Description": "S3 bucket for asset \"22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6c\""
    },
    "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3VersionKey4001853F": {
      "Type": "String",
      "Description": "S3 key for asset version \"22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6c\""
    },
    "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cArtifactHash22D5762A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6c\""
    },
    "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3Bucket9F5774BC": {
      "Type": "String",
      "Description": "S3 bucket for asset \"8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549a\""
    },
    "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3VersionKeyBD2D14C7": {
      "Type": "String",
      "Description": "S3 key for asset version \"8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549a\""
    },
    "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aArtifactHash577AA14A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549a\""
    },
    "AssetParameters7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18fS3Bucket46F8A28C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18f\""
    },
    "AssetParameters7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18fS3VersionKey03ECDF30": {
      "Type": "String",
      "Description": "S3 key for asset version \"7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18f\""
    },
    "AssetParameters7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18fArtifactHash1E021816": {
      "Type": "String",
      "Description": "Artifact hash for asset \"7f3a68aefef0ef3a3191d6220d6da795758f651376e348f1b4c93acf0341e18f\""
    },
    "AssetParametersa32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2S3Bucket84D74DE9": {
      "Type": "String",
      "Description": "S3 bucket for asset \"a32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2\""
    },
    "AssetParametersa32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2S3VersionKeyEC055275": {
      "Type": "String",
      "Description": "S3 key for asset version \"a32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2\""
    },
    "AssetParametersa32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2ArtifactHash00A08917": {
      "Type": "String",
      "Description": "Artifact hash for asset \"a32f27fc33cb9f3c07bc8d0431415ffb0a166ef4ef07df14765335bab3f6ebc2\""
    },
    "AssetParameterse5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bbS3Bucket9C9FDE89": {
      "Type": "String",
      "Description": "S3 bucket for asset \"e5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bb\""
    },
    "AssetParameterse5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bbS3VersionKeyD55AE31B": {
      "Type": "String",
      "Description": "S3 key for asset version \"e5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bb\""
    },
    "AssetParameterse5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bbArtifactHash3479EFE2": {
      "Type": "String",
      "Description": "Artifact hash for asset \"e5fc65f1906b174ae8dca1bac1c555bb0faac1badec58728843485de0b6686bb\""
    },
    "AssetParameters68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5S3Bucket3CBBBA0B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5\""
    },
    "AssetParameters68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5S3VersionKey8DB39602": {
      "Type": "String",
      "Description": "S3 key for asset version \"68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5\""
    },
    "AssetParameters68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5ArtifactHashAD1BA7B9": {
      "Type": "String",
      "Description": "Artifact hash for asset \"68591845232d8f220a70b504909ef064262f5e0b1fc2bc5c3ba86f47964ec9a5\""
    },
    "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3BucketF8737F0F": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018\""
    },
    "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3VersionKey071F0598": {
      "Type": "String",
      "Description": "S3 key for asset version \"f926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018\""
    },
    "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018ArtifactHashBC64EC6A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3Bucket4842F32D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A": {
      "Type": "String",
      "Description": "S3 key for asset version \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1ArtifactHash0128B949": {
      "Type": "String",
      "Description": "Artifact hash for asset \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3BucketE2B0E7A5": {
      "Type": "String",
      "Description": "S3 bucket for asset \"de307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5\""
    },
    "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3VersionKeyEECE885C": {
      "Type": "String",
      "Description": "S3 key for asset version \"de307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5\""
    },
    "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5ArtifactHash59467227": {
      "Type": "String",
      "Description": "Artifact hash for asset \"de307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5\""
    },
    "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3Bucket004ACA06": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083\""
    },
    "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3VersionKey3279A030": {
      "Type": "String",
      "Description": "S3 key for asset version \"f40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083\""
    },
    "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083ArtifactHashB3F0AE6F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083\""
    },
    "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3BucketFF9F79E9": {
      "Type": "String",
      "Description": "S3 bucket for asset \"04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695e\""
    },
    "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3VersionKey21F1C838": {
      "Type": "String",
      "Description": "S3 key for asset version \"04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695e\""
    },
    "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eArtifactHash34F31763": {
      "Type": "String",
      "Description": "Artifact hash for asset \"04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695e\""
    },
    "AssetParameters9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1eS3BucketBDA38A39": {
      "Type": "String",
      "Description": "S3 bucket for asset \"9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1e\""
    },
    "AssetParameters9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1eS3VersionKey23376756": {
      "Type": "String",
      "Description": "S3 key for asset version \"9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1e\""
    },
    "AssetParameters9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1eArtifactHash5758D7FA": {
      "Type": "String",
      "Description": "Artifact hash for asset \"9bb6f54e2ab4f253c703e3422ca43d76401ecd665d8c658f8c96c126fce5af1e\""
    }
  }
}