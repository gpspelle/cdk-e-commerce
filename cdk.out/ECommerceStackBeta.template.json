{
  "Resources": {
    "ECommerceStackBetaproductstableCD1A0D34": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 1
        },
        "TableName": "products"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/ECommerceStackBeta-products-table/Resource"
      }
    },
    "ECommerceStackBetaadminstableC570C583": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "email",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "email",
            "AttributeType": "S"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        },
        "TableName": "admins"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/ECommerceStackBeta-admins-table/Resource"
      }
    },
    "ECommerceStackBetaproducttagstable6EEDC9A5": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "TAG_NAME",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "TAG_NAME",
            "AttributeType": "S"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "productTags"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/ECommerceStackBeta-product-tags-table/Resource"
      }
    },
    "apiC8550315": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "e-commerce rest api gateway",
        "MinimumCompressionSize": 3500,
        "Name": "api"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Resource"
      }
    },
    "apiCloudWatchRoleAC81D93E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/CloudWatchRole/Resource"
      }
    },
    "apiAccount57E28B43": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "apiCloudWatchRoleAC81D93E",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "apiC8550315"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Account"
      }
    },
    "apiDeployment149F129447817c609c2498abacd8ebd0a33a7496": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "apiaccountGET43DD0EB2",
        "apiaccountOPTIONS8E2572AD",
        "apiaccountPATCHAE20C7C9",
        "apiaccountPUTDA39F327",
        "apiaccount7E8D5771",
        "apiaccountsGETB86617AD",
        "apiaccountsOPTIONS4256F313",
        "apiaccounts738F8F89",
        "apibatchproductsDELETEEF348C1A",
        "apibatchproductsOPTIONS67E971E0",
        "apibatchproductsPUT5A968823",
        "apibatchproducts21E1D6F6",
        "apicustomerproductGET896F0605",
        "apicustomerproductOPTIONS53EA1F03",
        "apicustomerproductDCCB8D74",
        "apicustomerproductsGET6E9158BC",
        "apicustomerproductsOPTIONS7DC47F66",
        "apicustomerproducts9CD518B6",
        "apidumpproductsOPTIONS005B0FD5",
        "apidumpproductsPUT8D1547A2",
        "apidumpproducts27FA296F",
        "apiloginOPTIONS7404BF99",
        "apiloginPOSTAD6F9831",
        "apilogin14037FF2",
        "apiOPTIONS5A1027A6",
        "apiproductDELETEE4DDDF9A",
        "apiproductOPTIONS4D2F1755",
        "apiproductPATCHAAB8AB93",
        "apiproductPUTAA3394CE",
        "apiproduct211E8A85",
        "apiproductsGETCE98977B",
        "apiproductsOPTIONS054C0992",
        "apiproductsA7D90674",
        "apitagsGETBF6CB0C9",
        "apitagsOPTIONSF0140192",
        "apitagsCCC680EE"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Deployment/Resource"
      }
    },
    "apiDeploymentStagedev96712F43": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "DeploymentId": {
          "Ref": "apiDeployment149F129447817c609c2498abacd8ebd0a33a7496"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "apiAccount57E28B43"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/DeploymentStage.dev/Resource"
      }
    },
    "apiOPTIONS5A1027A6": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/OPTIONS/Resource"
      }
    },
    "apiaccount7E8D5771": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "account",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/Resource"
      }
    },
    "apiaccountOPTIONS8E2572AD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/OPTIONS/Resource"
      }
    },
    "apiaccountPUTApiPermissionECommerceStackBetaapiA90EA381PUTaccount1B49DAF0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putaccountlambdaA0802262",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/PUT/ApiPermission.ECommerceStackBetaapiA90EA381.PUT..account"
      }
    },
    "apiaccountPUTApiPermissionTestECommerceStackBetaapiA90EA381PUTaccount82E2AA4E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putaccountlambdaA0802262",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/PUT/ApiPermission.Test.ECommerceStackBetaapiA90EA381.PUT..account"
      }
    },
    "apiaccountPUTDA39F327": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "putaccountlambdaA0802262",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/PUT/Resource"
      }
    },
    "apiaccountPATCHApiPermissionECommerceStackBetaapiA90EA381PATCHaccountB4A4EFFF": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchaccountlambda837DB17F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PATCH/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/PATCH/ApiPermission.ECommerceStackBetaapiA90EA381.PATCH..account"
      }
    },
    "apiaccountPATCHApiPermissionTestECommerceStackBetaapiA90EA381PATCHaccount6AFD216C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchaccountlambda837DB17F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PATCH/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/PATCH/ApiPermission.Test.ECommerceStackBetaapiA90EA381.PATCH..account"
      }
    },
    "apiaccountPATCHAE20C7C9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "patchaccountlambda837DB17F",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/PATCH/Resource"
      }
    },
    "apiaccountGETApiPermissionECommerceStackBetaapiA90EA381GETaccount9113DDC0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountlambdaAF349061",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/GET/ApiPermission.ECommerceStackBetaapiA90EA381.GET..account"
      }
    },
    "apiaccountGETApiPermissionTestECommerceStackBetaapiA90EA381GETaccount3343C1E6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountlambdaAF349061",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/GET/ApiPermission.Test.ECommerceStackBetaapiA90EA381.GET..account"
      }
    },
    "apiaccountGET43DD0EB2": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getaccountlambdaAF349061",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/account/GET/Resource"
      }
    },
    "apiaccounts738F8F89": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "accounts",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/accounts/Resource"
      }
    },
    "apiaccountsOPTIONS4256F313": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiaccounts738F8F89"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/accounts/OPTIONS/Resource"
      }
    },
    "apiaccountsGETApiPermissionECommerceStackBetaapiA90EA381GETaccounts03A76EF4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountslambda902DEA8D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/accounts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/accounts/GET/ApiPermission.ECommerceStackBetaapiA90EA381.GET..accounts"
      }
    },
    "apiaccountsGETApiPermissionTestECommerceStackBetaapiA90EA381GETaccounts120EE853": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountslambda902DEA8D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/accounts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/accounts/GET/ApiPermission.Test.ECommerceStackBetaapiA90EA381.GET..accounts"
      }
    },
    "apiaccountsGETB86617AD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apiaccounts738F8F89"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getaccountslambda902DEA8D",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/accounts/GET/Resource"
      }
    },
    "apilogin14037FF2": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "login",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/login/Resource"
      }
    },
    "apiloginOPTIONS7404BF99": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apilogin14037FF2"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/login/OPTIONS/Resource"
      }
    },
    "apiloginPOSTApiPermissionECommerceStackBetaapiA90EA381POSTloginBF7118CD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postloginlambdaC7BFFE1D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/POST/login"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/login/POST/ApiPermission.ECommerceStackBetaapiA90EA381.POST..login"
      }
    },
    "apiloginPOSTApiPermissionTestECommerceStackBetaapiA90EA381POSTlogin9668752A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postloginlambdaC7BFFE1D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/POST/login"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/login/POST/ApiPermission.Test.ECommerceStackBetaapiA90EA381.POST..login"
      }
    },
    "apiloginPOSTAD6F9831": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "apilogin14037FF2"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "postloginlambdaC7BFFE1D",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/login/POST/Resource"
      }
    },
    "apiproduct211E8A85": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "product",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/Resource"
      }
    },
    "apiproductOPTIONS4D2F1755": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/OPTIONS/Resource"
      }
    },
    "apiproductPUTApiPermissionECommerceStackBetaapiA90EA381PUTproductB47FF7A3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putproductlambda887F64D5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/PUT/ApiPermission.ECommerceStackBetaapiA90EA381.PUT..product"
      }
    },
    "apiproductPUTApiPermissionTestECommerceStackBetaapiA90EA381PUTproductE4E39559": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putproductlambda887F64D5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/PUT/ApiPermission.Test.ECommerceStackBetaapiA90EA381.PUT..product"
      }
    },
    "apiproductPUTAA3394CE": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "putproductlambda887F64D5",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/PUT/Resource"
      }
    },
    "apiproductDELETEApiPermissionECommerceStackBetaapiA90EA381DELETEproductD02A363A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteproductlambdaEA497826",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/DELETE/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/DELETE/ApiPermission.ECommerceStackBetaapiA90EA381.DELETE..product"
      }
    },
    "apiproductDELETEApiPermissionTestECommerceStackBetaapiA90EA381DELETEproductCD6F7999": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteproductlambdaEA497826",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/DELETE/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/DELETE/ApiPermission.Test.ECommerceStackBetaapiA90EA381.DELETE..product"
      }
    },
    "apiproductDELETEE4DDDF9A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteproductlambdaEA497826",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/DELETE/Resource"
      }
    },
    "apiproductPATCHApiPermissionECommerceStackBetaapiA90EA381PATCHproduct9E1E3F5A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchproductlambdaB9500F3A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PATCH/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/PATCH/ApiPermission.ECommerceStackBetaapiA90EA381.PATCH..product"
      }
    },
    "apiproductPATCHApiPermissionTestECommerceStackBetaapiA90EA381PATCHproduct89421DCD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchproductlambdaB9500F3A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PATCH/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/PATCH/ApiPermission.Test.ECommerceStackBetaapiA90EA381.PATCH..product"
      }
    },
    "apiproductPATCHAAB8AB93": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "patchproductlambdaB9500F3A",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/product/PATCH/Resource"
      }
    },
    "apiproductsA7D90674": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "products",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/products/Resource"
      }
    },
    "apiproductsOPTIONS054C0992": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiproductsA7D90674"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/products/OPTIONS/Resource"
      }
    },
    "apiproductsGETApiPermissionECommerceStackBetaapiA90EA381GETproductsD6570D24": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getproductslambda0220F63B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/products/GET/ApiPermission.ECommerceStackBetaapiA90EA381.GET..products"
      }
    },
    "apiproductsGETApiPermissionTestECommerceStackBetaapiA90EA381GETproducts1A4EAA1C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getproductslambda0220F63B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/products/GET/ApiPermission.Test.ECommerceStackBetaapiA90EA381.GET..products"
      }
    },
    "apiproductsGETCE98977B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apiproductsA7D90674"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getproductslambda0220F63B",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/products/GET/Resource"
      }
    },
    "apicustomerproductDCCB8D74": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "customer-product",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-product/Resource"
      }
    },
    "apicustomerproductOPTIONS53EA1F03": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apicustomerproductDCCB8D74"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-product/OPTIONS/Resource"
      }
    },
    "apicustomerproductGETApiPermissionECommerceStackBetaapiA90EA381GETcustomerproductC19B7B76": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductlambda7E8DD103",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/customer-product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-product/GET/ApiPermission.ECommerceStackBetaapiA90EA381.GET..customer-product"
      }
    },
    "apicustomerproductGETApiPermissionTestECommerceStackBetaapiA90EA381GETcustomerproductCCF7E5C9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductlambda7E8DD103",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/customer-product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-product/GET/ApiPermission.Test.ECommerceStackBetaapiA90EA381.GET..customer-product"
      }
    },
    "apicustomerproductGET896F0605": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apicustomerproductDCCB8D74"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getcustomerproductlambda7E8DD103",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-product/GET/Resource"
      }
    },
    "apicustomerproducts9CD518B6": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "customer-products",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-products/Resource"
      }
    },
    "apicustomerproductsOPTIONS7DC47F66": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apicustomerproducts9CD518B6"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-products/OPTIONS/Resource"
      }
    },
    "apicustomerproductsGETApiPermissionECommerceStackBetaapiA90EA381GETcustomerproductsC5F88D83": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductslambda79C12DA3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/customer-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-products/GET/ApiPermission.ECommerceStackBetaapiA90EA381.GET..customer-products"
      }
    },
    "apicustomerproductsGETApiPermissionTestECommerceStackBetaapiA90EA381GETcustomerproductsB9BF0AAC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductslambda79C12DA3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/customer-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-products/GET/ApiPermission.Test.ECommerceStackBetaapiA90EA381.GET..customer-products"
      }
    },
    "apicustomerproductsGET6E9158BC": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apicustomerproducts9CD518B6"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getcustomerproductslambda79C12DA3",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/customer-products/GET/Resource"
      }
    },
    "apitagsCCC680EE": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "tags",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/tags/Resource"
      }
    },
    "apitagsOPTIONSF0140192": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apitagsCCC680EE"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/tags/OPTIONS/Resource"
      }
    },
    "apitagsGETApiPermissionECommerceStackBetaapiA90EA381GETtags027FCEB0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "gettagslambda917EA6B4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/tags/GET/ApiPermission.ECommerceStackBetaapiA90EA381.GET..tags"
      }
    },
    "apitagsGETApiPermissionTestECommerceStackBetaapiA90EA381GETtags298A7DA2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "gettagslambda917EA6B4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/tags/GET/ApiPermission.Test.ECommerceStackBetaapiA90EA381.GET..tags"
      }
    },
    "apitagsGETBF6CB0C9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apitagsCCC680EE"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "gettagslambda917EA6B4",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/tags/GET/Resource"
      }
    },
    "apidumpproducts27FA296F": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "dump-products",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/dump-products/Resource"
      }
    },
    "apidumpproductsOPTIONS005B0FD5": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apidumpproducts27FA296F"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/dump-products/OPTIONS/Resource"
      }
    },
    "apidumpproductsPUTApiPermissionECommerceStackBetaapiA90EA381PUTdumpproductsB4B67F6C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putdumpproductslambda90920138",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/dump-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/dump-products/PUT/ApiPermission.ECommerceStackBetaapiA90EA381.PUT..dump-products"
      }
    },
    "apidumpproductsPUTApiPermissionTestECommerceStackBetaapiA90EA381PUTdumpproducts4652042C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putdumpproductslambda90920138",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/dump-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/dump-products/PUT/ApiPermission.Test.ECommerceStackBetaapiA90EA381.PUT..dump-products"
      }
    },
    "apidumpproductsPUT8D1547A2": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apidumpproducts27FA296F"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "putdumpproductslambda90920138",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/dump-products/PUT/Resource"
      }
    },
    "apibatchproducts21E1D6F6": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "batch-products",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/batch-products/Resource"
      }
    },
    "apibatchproductsOPTIONS67E971E0": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apibatchproducts21E1D6F6"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/batch-products/OPTIONS/Resource"
      }
    },
    "apibatchproductsDELETEApiPermissionECommerceStackBetaapiA90EA381DELETEbatchproducts609FF2F2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "batchdeleteproductslambda53DE3161",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/DELETE/batch-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/batch-products/DELETE/ApiPermission.ECommerceStackBetaapiA90EA381.DELETE..batch-products"
      }
    },
    "apibatchproductsDELETEApiPermissionTestECommerceStackBetaapiA90EA381DELETEbatchproductsD9ECFF20": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "batchdeleteproductslambda53DE3161",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/DELETE/batch-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/batch-products/DELETE/ApiPermission.Test.ECommerceStackBetaapiA90EA381.DELETE..batch-products"
      }
    },
    "apibatchproductsDELETEEF348C1A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "apibatchproducts21E1D6F6"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "batchdeleteproductslambda53DE3161",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/batch-products/DELETE/Resource"
      }
    },
    "apibatchproductsPUTApiPermissionECommerceStackBetaapiA90EA381PUTbatchproductsBAC930D5": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "batchputproductslambda9855870C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/batch-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/batch-products/PUT/ApiPermission.ECommerceStackBetaapiA90EA381.PUT..batch-products"
      }
    },
    "apibatchproductsPUTApiPermissionTestECommerceStackBetaapiA90EA381PUTbatchproductsA6637966": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "batchputproductslambda9855870C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/batch-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/batch-products/PUT/ApiPermission.Test.ECommerceStackBetaapiA90EA381.PUT..batch-products"
      }
    },
    "apibatchproductsPUT5A968823": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apibatchproducts21E1D6F6"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "batchputproductslambda9855870C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/api/Default/batch-products/PUT/Resource"
      }
    },
    "adminauthlambdaServiceRole16E8F46B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/admin-auth-lambda/ServiceRole/Resource"
      }
    },
    "adminauthlambda5ADA16C5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038S3Bucket800FC910"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038S3VersionKey5D46BF7C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038S3VersionKey5D46BF7C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "adminauthlambdaServiceRole16E8F46B",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "REGION": "us-east-1",
            "ACCOUNT": "774004686218",
            "STAGE": "dev",
            "API_ID": {
              "Ref": "apiC8550315"
            },
            "ACCESS_TOKEN_NAME": "x-access-token"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "adminauthlambdaServiceRole16E8F46B"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/admin-auth-lambda/Resource",
        "aws:asset:path": "asset.0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "adminauthlambdaECommerceStackBetajwttokenadminauth309375A1Permissions3F1547C3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "adminauthlambda5ADA16C5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "apiC8550315"
              },
              "/authorizers/",
              {
                "Ref": "jwttokenadminauth00C9E0A9"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/admin-auth-lambda/ECommerceStackBetajwttokenadminauth309375A1:Permissions"
      }
    },
    "jwttokenadminauth00C9E0A9": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "Name": "ECommerceStackBetajwttokenadminauth309375A1",
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Type": "TOKEN",
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "adminauthlambda5ADA16C5",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "IdentitySource": "method.request.header.x-access-token"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/jwt-token-admin-auth/Resource"
      }
    },
    "emailauthlambdaServiceRole678A063B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/email-auth-lambda/ServiceRole/Resource"
      }
    },
    "emailauthlambda1EBD14F9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3Bucket438CC9FB"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3VersionKey5BB10098"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3VersionKey5BB10098"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "emailauthlambdaServiceRole678A063B",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "ACCESS_TOKEN_NAME": "x-access-token"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "emailauthlambdaServiceRole678A063B"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/email-auth-lambda/Resource",
        "aws:asset:path": "asset.93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeed",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "httpapiE8E4C45A": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "CorsConfiguration": {
          "AllowCredentials": false,
          "AllowHeaders": [
            "Content-Type",
            "X-Amz-Date",
            "Authorization",
            "X-Api-Key"
          ],
          "AllowMethods": [
            "OPTIONS",
            "GET",
            "POST",
            "PUT",
            "PATCH",
            "DELETE"
          ],
          "AllowOrigins": [
            "*"
          ]
        },
        "Description": "e-commerce http api gateway",
        "Name": "http-api",
        "ProtocolType": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/Resource"
      }
    },
    "httpapiDefaultStage7AF19DCA": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "StageName": "$default",
        "AutoDeploy": true
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/DefaultStage/Resource"
      }
    },
    "httpapiPOSTsendverifyemailSendVerificationEmailIntegrationPermission1AA6FA81": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sendverificationemaillambdaFC2DD3A6",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/*/*/send-verify-email"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/POST--send-verify-email/SendVerificationEmailIntegration-Permission"
      }
    },
    "httpapiPOSTsendverifyemailSendVerificationEmailIntegration97ADF400": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "sendverificationemaillambdaFC2DD3A6",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/POST--send-verify-email/SendVerificationEmailIntegration/Resource"
      }
    },
    "httpapiPOSTsendverifyemailC6D01FCD": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "RouteKey": "POST /send-verify-email",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "httpapiEmailVerificationAuthorizer0BA5A02E"
        },
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "httpapiPOSTsendverifyemailSendVerificationEmailIntegration97ADF400"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/POST--send-verify-email/Resource"
      }
    },
    "httpapiEmailVerificationAuthorizer0BA5A02E": {
      "Type": "AWS::ApiGatewayV2::Authorizer",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "AuthorizerType": "REQUEST",
        "Name": "EmailVerificationAuthorizer",
        "AuthorizerPayloadFormatVersion": "2.0",
        "AuthorizerResultTtlInSeconds": 300,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "emailauthlambda1EBD14F9",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "EnableSimpleResponses": true,
        "IdentitySource": [
          "$request.querystring.x-access-token"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/EmailVerificationAuthorizer/Resource"
      }
    },
    "httpapiECommerceStackBetahttpapiEmailVerificationAuthorizer2C5730EFPermission90D730BE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "emailauthlambda1EBD14F9",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/authorizers/",
              {
                "Ref": "httpapiEmailVerificationAuthorizer0BA5A02E"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/ECommerceStackBetahttpapiEmailVerificationAuthorizer2C5730EF-Permission"
      }
    },
    "httpapiGETverifyemailEmailVerificationIntegrationPermissionFAF45894": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getverificationemail6C977FFB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/*/*/verify-email"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/GET--verify-email/EmailVerificationIntegration-Permission"
      }
    },
    "httpapiGETverifyemailEmailVerificationIntegrationB462BD01": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "getverificationemail6C977FFB",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/GET--verify-email/EmailVerificationIntegration/Resource"
      }
    },
    "httpapiGETverifyemailDD0CBD29": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "RouteKey": "GET /verify-email",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "httpapiEmailVerificationAuthorizer0BA5A02E"
        },
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "httpapiGETverifyemailEmailVerificationIntegrationB462BD01"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/GET--verify-email/Resource"
      }
    },
    "httpapiPOSTsendforgotpasswordemailSendForgotPasswordEmailIntegrationPermission7201964C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "sendforgotpasswordemaillambda73B2C8A0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:774004686218:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/*/*/send-forgot-password-email"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/POST--send-forgot-password-email/SendForgotPasswordEmailIntegration-Permission"
      }
    },
    "httpapiPOSTsendforgotpasswordemailSendForgotPasswordEmailIntegrationC11B5857": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "sendforgotpasswordemaillambda73B2C8A0",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/POST--send-forgot-password-email/SendForgotPasswordEmailIntegration/Resource"
      }
    },
    "httpapiPOSTsendforgotpasswordemailAA2B2381": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "RouteKey": "POST /send-forgot-password-email",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "httpapiPOSTsendforgotpasswordemailSendForgotPasswordEmailIntegrationC11B5857"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/http-api/POST--send-forgot-password-email/Resource"
      }
    },
    "eCommerceAmplifyAppRoleC40BBB51": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "amplify.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/eCommerceAmplifyApp/Role/Resource"
      }
    },
    "eCommerceAmplifyApp2D763A71": {
      "Type": "AWS::Amplify::App",
      "Properties": {
        "Name": "eCommerceAmplifyApp",
        "BasicAuthConfig": {
          "EnableBasicAuth": false
        },
        "BuildSpec": "version: \"1.0\"\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - npm install\n    build:\n      commands:\n        - npm run build\n  artifacts:\n    baseDirectory: build\n    files:\n      - \"**/*\"\n  cache:\n    paths:\n      - node_modules/**/*\n",
        "CustomRules": [
          {
            "Source": "</^[^.]+$|\\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/>",
            "Status": "200",
            "Target": "/index.html"
          }
        ],
        "EnvironmentVariables": [
          {
            "Name": "REACT_APP_REST_API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "apiC8550315"
                  },
                  ".execute-api.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/",
                  {
                    "Ref": "apiDeploymentStagedev96712F43"
                  },
                  "/"
                ]
              ]
            }
          },
          {
            "Name": "REACT_APP_PAGE_TITLE",
            "Value": ""
          },
          {
            "Name": "REACT_APP_PAGE_DESCRIPTION",
            "Value": ""
          },
          {
            "Name": "REACT_APP_APP_NAME",
            "Value": ""
          },
          {
            "Name": "REACT_APP_PRODUCT_ORDER",
            "Value": "PRODUCT_ORDER"
          },
          {
            "Name": "REACT_APP_PRODUCT_STOCK",
            "Value": "PRODUCT_STOCK"
          }
        ],
        "IAMServiceRole": {
          "Fn::GetAtt": [
            "eCommerceAmplifyAppRoleC40BBB51",
            "Arn"
          ]
        },
        "OauthToken": "{{resolve:secretsmanager:github-access-token:SecretString:::}}",
        "Repository": "https://github.com/gpspelle/e-commerce"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/eCommerceAmplifyApp/Resource"
      }
    },
    "eCommerceAmplifyAppmaster50213BEE": {
      "Type": "AWS::Amplify::Branch",
      "Properties": {
        "AppId": {
          "Fn::GetAtt": [
            "eCommerceAmplifyApp2D763A71",
            "AppId"
          ]
        },
        "BranchName": "master",
        "EnableAutoBuild": true,
        "EnablePullRequestPreview": true
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/eCommerceAmplifyApp/master/Resource"
      }
    },
    "eCommerceAdminAmplifyAppRoleD08EF328": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "amplify.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/eCommerceAdminAmplifyApp/Role/Resource"
      }
    },
    "eCommerceAdminAmplifyAppF8F89BE8": {
      "Type": "AWS::Amplify::App",
      "Properties": {
        "Name": "eCommerceAdminAmplifyApp",
        "BasicAuthConfig": {
          "EnableBasicAuth": false
        },
        "BuildSpec": "version: \"1.0\"\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - npm install\n    build:\n      commands:\n        - npm run build\n  artifacts:\n    baseDirectory: build\n    files:\n      - \"**/*\"\n  cache:\n    paths:\n      - node_modules/**/*\n",
        "CustomRules": [
          {
            "Source": "</^[^.]+$|\\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/>",
            "Status": "200",
            "Target": "/index.html"
          }
        ],
        "EnvironmentVariables": [
          {
            "Name": "REACT_APP_REST_API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "apiC8550315"
                  },
                  ".execute-api.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/",
                  {
                    "Ref": "apiDeploymentStagedev96712F43"
                  },
                  "/"
                ]
              ]
            }
          },
          {
            "Name": "REACT_APP_HTTP_API",
            "Value": {
              "Fn::GetAtt": [
                "httpapiE8E4C45A",
                "ApiEndpoint"
              ]
            }
          },
          {
            "Name": "REACT_APP_ACCESS_TOKEN_NAME",
            "Value": "x-access-token"
          },
          {
            "Name": "REACT_APP_NO_TAGS_STRING",
            "Value": "!@#$no-tag%^&*"
          },
          {
            "Name": "REACT_APP_PRODUCTS_DUMP_FILE_NAME",
            "Value": "products-dump"
          },
          {
            "Name": "REACT_APP_ADMINS_BUCKET",
            "Value": "us-east-1-beta-e-commerce-admins-bucket"
          },
          {
            "Name": "REACT_APP_PRODUCT_ORDER",
            "Value": "PRODUCT_ORDER"
          },
          {
            "Name": "REACT_APP_PRODUCT_STOCK",
            "Value": "PRODUCT_STOCK"
          }
        ],
        "IAMServiceRole": {
          "Fn::GetAtt": [
            "eCommerceAdminAmplifyAppRoleD08EF328",
            "Arn"
          ]
        },
        "OauthToken": "{{resolve:secretsmanager:github-access-token:SecretString:::}}",
        "Repository": "https://github.com/gpspelle/admin-e-commerce"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/eCommerceAdminAmplifyApp/Resource"
      }
    },
    "eCommerceAdminAmplifyAppmasterC3195E9C": {
      "Type": "AWS::Amplify::Branch",
      "Properties": {
        "AppId": {
          "Fn::GetAtt": [
            "eCommerceAdminAmplifyAppF8F89BE8",
            "AppId"
          ]
        },
        "BranchName": "master",
        "EnableAutoBuild": true,
        "EnablePullRequestPreview": true
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/eCommerceAdminAmplifyApp/master/Resource"
      }
    },
    "putaccountlambdaServiceRoleA8C81C5B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/put-account-lambda/ServiceRole/Resource"
      }
    },
    "putaccountlambdaServiceRoleDefaultPolicy8B416564": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaadminstableC570C583",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "putaccountlambdaServiceRoleDefaultPolicy8B416564",
        "Roles": [
          {
            "Ref": "putaccountlambdaServiceRoleA8C81C5B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/put-account-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "putaccountlambdaA0802262": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02S3BucketDBD3A01B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02S3VersionKey51A995BE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02S3VersionKey51A995BE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "putaccountlambdaServiceRoleA8C81C5B",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "ADMINS_TABLE": "admins",
            "ADMINS_TABLE_PARTITION_KEY": "email",
            "HASH_ALG": "sha512"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "putaccountlambdaServiceRoleDefaultPolicy8B416564",
        "putaccountlambdaServiceRoleA8C81C5B"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/put-account-lambda/Resource",
        "aws:asset:path": "asset.368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "patchaccountlambdaServiceRole3527FE65": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/patch-account-lambda/ServiceRole/Resource"
      }
    },
    "patchaccountlambdaServiceRoleDefaultPolicy8E18B8B9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaadminstableC570C583",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3adminsbucketE18F2157",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3adminsbucketE18F2157",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "patchaccountlambdaServiceRoleDefaultPolicy8E18B8B9",
        "Roles": [
          {
            "Ref": "patchaccountlambdaServiceRole3527FE65"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/patch-account-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "patchaccountlambda837DB17F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674aS3BucketB3045CFF"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674aS3VersionKeyB75BF7BF"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674aS3VersionKeyB75BF7BF"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "patchaccountlambdaServiceRole3527FE65",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "ADMINS_TABLE": "admins",
            "ADMINS_TABLE_PARTITION_KEY": "email",
            "HASH_ALG": "sha512",
            "ADMINS_BUCKET": "us-east-1-beta-e-commerce-admins-bucket",
            "SAME_ORIGINAL_PROFILE_PHOTO_STRING": "SAME",
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "patchaccountlambdaServiceRoleDefaultPolicy8E18B8B9",
        "patchaccountlambdaServiceRole3527FE65"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/patch-account-lambda/Resource",
        "aws:asset:path": "asset.3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674a",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getaccountlambdaServiceRoleF2B2CA18": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-account-lambda/ServiceRole/Resource"
      }
    },
    "getaccountlambdaServiceRoleDefaultPolicyAD873E92": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaadminstableC570C583",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getaccountlambdaServiceRoleDefaultPolicyAD873E92",
        "Roles": [
          {
            "Ref": "getaccountlambdaServiceRoleF2B2CA18"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-account-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getaccountlambdaAF349061": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98S3BucketA93D1D83"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98S3VersionKey44DB610C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98S3VersionKey44DB610C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getaccountlambdaServiceRoleF2B2CA18",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "ADMINS_TABLE": "admins"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getaccountlambdaServiceRoleDefaultPolicyAD873E92",
        "getaccountlambdaServiceRoleF2B2CA18"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-account-lambda/Resource",
        "aws:asset:path": "asset.3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getaccountslambdaServiceRoleCF9DA346": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-accounts-lambda/ServiceRole/Resource"
      }
    },
    "getaccountslambdaServiceRoleDefaultPolicyF14E7A9E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaadminstableC570C583",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getaccountslambdaServiceRoleDefaultPolicyF14E7A9E",
        "Roles": [
          {
            "Ref": "getaccountslambdaServiceRoleCF9DA346"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-accounts-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getaccountslambda902DEA8D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504aS3BucketF4AD9948"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504aS3VersionKey0A142F49"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504aS3VersionKey0A142F49"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getaccountslambdaServiceRoleCF9DA346",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "ADMINS_TABLE": "admins"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getaccountslambdaServiceRoleDefaultPolicyF14E7A9E",
        "getaccountslambdaServiceRoleCF9DA346"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-accounts-lambda/Resource",
        "aws:asset:path": "asset.50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504a",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "postloginlambdaServiceRole5FBE01F4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/post-login-lambda/ServiceRole/Resource"
      }
    },
    "postloginlambdaServiceRoleDefaultPolicyA9899A24": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaadminstableC570C583",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "postloginlambdaServiceRoleDefaultPolicyA9899A24",
        "Roles": [
          {
            "Ref": "postloginlambdaServiceRole5FBE01F4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/post-login-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "postloginlambdaC7BFFE1D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564S3BucketC449AF29"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564S3VersionKeyADBD0E33"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564S3VersionKeyADBD0E33"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "postloginlambdaServiceRole5FBE01F4",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "REGION": "us-east-1",
            "ADMINS_TABLE": "admins",
            "ADMINS_TABLE_PARTITION_KEY": "email",
            "HASH_ALG": "sha512"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "postloginlambdaServiceRoleDefaultPolicyA9899A24",
        "postloginlambdaServiceRole5FBE01F4"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/post-login-lambda/Resource",
        "aws:asset:path": "asset.9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getproductslambdaServiceRoleEDEF75F9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-products-lambda/ServiceRole/Resource"
      }
    },
    "getproductslambdaServiceRoleDefaultPolicyE01DE73D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproductstableCD1A0D34",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getproductslambdaServiceRoleDefaultPolicyE01DE73D",
        "Roles": [
          {
            "Ref": "getproductslambdaServiceRoleEDEF75F9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-products-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getproductslambda0220F63B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3Bucket45DEBC6B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3VersionKeyBD68D59C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3VersionKeyBD68D59C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getproductslambdaServiceRoleEDEF75F9",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCTS_TABLE": "products"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "getproductslambdaServiceRoleDefaultPolicyE01DE73D",
        "getproductslambdaServiceRoleEDEF75F9"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-products-lambda/Resource",
        "aws:asset:path": "asset.f616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cec",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getcustomerproductlambdaServiceRoleF7F7DF3F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-customer-product-lambda/ServiceRole/Resource"
      }
    },
    "getcustomerproductlambdaServiceRoleDefaultPolicyAB8C18AB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproductstableCD1A0D34",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getcustomerproductlambdaServiceRoleDefaultPolicyAB8C18AB",
        "Roles": [
          {
            "Ref": "getcustomerproductlambdaServiceRoleF7F7DF3F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-customer-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getcustomerproductlambda7E8DD103": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3Bucket90EA2ADD"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3VersionKey4001853F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3VersionKey4001853F"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getcustomerproductlambdaServiceRoleF7F7DF3F",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getcustomerproductlambdaServiceRoleDefaultPolicyAB8C18AB",
        "getcustomerproductlambdaServiceRoleF7F7DF3F"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-customer-product-lambda/Resource",
        "aws:asset:path": "asset.22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6c",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getcustomerproductslambdaServiceRoleBBAD3B7C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-customer-products-lambda/ServiceRole/Resource"
      }
    },
    "getcustomerproductslambdaServiceRoleDefaultPolicy717367D1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproductstableCD1A0D34",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getcustomerproductslambdaServiceRoleDefaultPolicy717367D1",
        "Roles": [
          {
            "Ref": "getcustomerproductslambdaServiceRoleBBAD3B7C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-customer-products-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getcustomerproductslambda79C12DA3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3Bucket9F5774BC"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3VersionKeyBD2D14C7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3VersionKeyBD2D14C7"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getcustomerproductslambdaServiceRoleBBAD3B7C",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCTS_TABLE": "products"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "getcustomerproductslambdaServiceRoleDefaultPolicy717367D1",
        "getcustomerproductslambdaServiceRoleBBAD3B7C"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-customer-products-lambda/Resource",
        "aws:asset:path": "asset.8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549a",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "putproductlambdaServiceRole2AB129BC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/put-product-lambda/ServiceRole/Resource"
      }
    },
    "putproductlambdaServiceRoleDefaultPolicy54F4655F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproductstableCD1A0D34",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproducttagstable6EEDC9A5",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "putproductlambdaServiceRoleDefaultPolicy54F4655F",
        "Roles": [
          {
            "Ref": "putproductlambdaServiceRole2AB129BC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/put-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "putproductlambda887F64D5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677S3Bucket95CB0981"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677S3VersionKeyABAEA5F8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677S3VersionKeyABAEA5F8"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "putproductlambdaServiceRole2AB129BC",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id",
            "PRODUCT_TAGS_TABLE": "productTags",
            "PRODUCT_TAGS_TABLE_PARTITION_KEY": "TAG_NAME",
            "IMAGES_BUCKET": "beta-e-commerce-images-bucket",
            "NO_TAGS_STRING": "!@#$no-tag%^&*"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "putproductlambdaServiceRoleDefaultPolicy54F4655F",
        "putproductlambdaServiceRole2AB129BC"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/put-product-lambda/Resource",
        "aws:asset:path": "asset.f2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "deleteproductlambdaServiceRole807E7403": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/delete-product-lambda/ServiceRole/Resource"
      }
    },
    "deleteproductlambdaServiceRoleDefaultPolicy34BA7ED0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproductstableCD1A0D34",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproducttagstable6EEDC9A5",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteproductlambdaServiceRoleDefaultPolicy34BA7ED0",
        "Roles": [
          {
            "Ref": "deleteproductlambdaServiceRole807E7403"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/delete-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteproductlambdaEA497826": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersb958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961S3Bucket529420EA"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961S3VersionKeyF1663313"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961S3VersionKeyF1663313"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "deleteproductlambdaServiceRole807E7403",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id",
            "PRODUCT_TAGS_TABLE": "productTags",
            "PRODUCT_TAGS_TABLE_PARTITION_KEY": "TAG_NAME",
            "IMAGES_BUCKET": "beta-e-commerce-images-bucket"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "deleteproductlambdaServiceRoleDefaultPolicy34BA7ED0",
        "deleteproductlambdaServiceRole807E7403"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/delete-product-lambda/Resource",
        "aws:asset:path": "asset.b958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "patchproductlambdaServiceRole0B5E1A11": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/patch-product-lambda/ServiceRole/Resource"
      }
    },
    "patchproductlambdaServiceRoleDefaultPolicy3AC750CB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproductstableCD1A0D34",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproducttagstable6EEDC9A5",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "patchproductlambdaServiceRoleDefaultPolicy3AC750CB",
        "Roles": [
          {
            "Ref": "patchproductlambdaServiceRole0B5E1A11"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/patch-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "patchproductlambdaB9500F3A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039S3Bucket24BE3954"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039S3VersionKeyAA798655"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039S3VersionKeyAA798655"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "patchproductlambdaServiceRole0B5E1A11",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id",
            "PRODUCT_TAGS_TABLE": "productTags",
            "PRODUCT_TAGS_TABLE_PARTITION_KEY": "TAG_NAME",
            "IMAGES_BUCKET": "beta-e-commerce-images-bucket",
            "NO_TAGS_STRING": "!@#$no-tag%^&*"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "patchproductlambdaServiceRoleDefaultPolicy3AC750CB",
        "patchproductlambdaServiceRole0B5E1A11"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/patch-product-lambda/Resource",
        "aws:asset:path": "asset.0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "gettagslambdaServiceRole2F6F5683": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-tags-lambda/ServiceRole/Resource"
      }
    },
    "gettagslambdaServiceRoleDefaultPolicy40148E85": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproducttagstable6EEDC9A5",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "gettagslambdaServiceRoleDefaultPolicy40148E85",
        "Roles": [
          {
            "Ref": "gettagslambdaServiceRole2F6F5683"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-tags-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "gettagslambda917EA6B4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3BucketF8737F0F"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3VersionKey071F0598"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3VersionKey071F0598"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "gettagslambdaServiceRole2F6F5683",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCT_TAGS_TABLE": "productTags",
            "PRODUCT_TAGS_TABLE_PARTITION_KEY": "TAG_NAME",
            "NO_TAGS_STRING": "!@#$no-tag%^&*"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "gettagslambdaServiceRoleDefaultPolicy40148E85",
        "gettagslambdaServiceRole2F6F5683"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-tags-lambda/Resource",
        "aws:asset:path": "asset.f926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "putdumpproductslambdaServiceRole04DCF7A5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/put-dump-products-lambda/ServiceRole/Resource"
      }
    },
    "putdumpproductslambdaServiceRoleDefaultPolicy15C9D826": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3adminsbucketE18F2157",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3adminsbucketE18F2157",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "putdumpproductslambdaServiceRoleDefaultPolicy15C9D826",
        "Roles": [
          {
            "Ref": "putdumpproductslambdaServiceRole04DCF7A5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/put-dump-products-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "putdumpproductslambda90920138": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersc68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cecS3BucketE008BB35"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersc68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cecS3VersionKeyA905EF31"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersc68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cecS3VersionKeyA905EF31"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "putdumpproductslambdaServiceRole04DCF7A5",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "ADMINS_BUCKET": "us-east-1-beta-e-commerce-admins-bucket",
            "PRODUCTS_DUMP": "products-dump"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "putdumpproductslambdaServiceRoleDefaultPolicy15C9D826",
        "putdumpproductslambdaServiceRole04DCF7A5"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/put-dump-products-lambda/Resource",
        "aws:asset:path": "asset.c68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cec",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "batchdeleteproductslambdaServiceRole234670C7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/batch-delete-products-lambda/ServiceRole/Resource"
      }
    },
    "batchdeleteproductslambdaServiceRoleDefaultPolicy17D670C6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproductstableCD1A0D34",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "batchdeleteproductslambdaServiceRoleDefaultPolicy17D670C6",
        "Roles": [
          {
            "Ref": "batchdeleteproductslambdaServiceRole234670C7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/batch-delete-products-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "batchdeleteproductslambda53DE3161": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904S3BucketCA7EFF0E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904S3VersionKey8067D23F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904S3VersionKey8067D23F"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "batchdeleteproductslambdaServiceRole234670C7",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "batchdeleteproductslambdaServiceRoleDefaultPolicy17D670C6",
        "batchdeleteproductslambdaServiceRole234670C7"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/batch-delete-products-lambda/Resource",
        "aws:asset:path": "asset.896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "batchputproductslambdaServiceRoleAB88894C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/batch-put-products-lambda/ServiceRole/Resource"
      }
    },
    "batchputproductslambdaServiceRoleDefaultPolicy0E514522": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproductstableCD1A0D34",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "batchputproductslambdaServiceRoleDefaultPolicy0E514522",
        "Roles": [
          {
            "Ref": "batchputproductslambdaServiceRoleAB88894C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/batch-put-products-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "batchputproductslambda9855870C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875aS3BucketACA5C930"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875aS3VersionKeyFDB3B0F7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875aS3VersionKeyFDB3B0F7"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "batchputproductslambdaServiceRoleAB88894C",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCTS_TABLE": "products"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "batchputproductslambdaServiceRoleDefaultPolicy0E514522",
        "batchputproductslambdaServiceRoleAB88894C"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/batch-put-products-lambda/Resource",
        "aws:asset:path": "asset.f484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875a",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "s3bucket64CB25AF": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": "beta-e-commerce-images-bucket",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "POST",
                "PUT"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 90
              },
              "ExpirationInDays": 365,
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30
                }
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/s3-bucket/Resource"
      }
    },
    "s3bucketPolicyF7E91061": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3bucket64CB25AF"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "s3bucket64CB25AF",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/s3-bucket/Policy/Resource"
      }
    },
    "s3bucketAutoDeleteObjectsCustomResource839C6F53": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "s3bucket64CB25AF"
        }
      },
      "DependsOn": [
        "s3bucketPolicyF7E91061"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/s3-bucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3Bucket4842F32D"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "s3bucket64CB25AF"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
        "aws:asset:path": "asset.1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1",
        "aws:asset:property": "Code"
      }
    },
    "s3adminsbucketE18F2157": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": "us-east-1-beta-e-commerce-admins-bucket",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "POST",
                "PUT"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 90
              },
              "ExpirationInDays": 365,
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30
                }
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/s3-admins-bucket/Resource"
      }
    },
    "s3adminsbucketPolicyC6F343A7": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3adminsbucketE18F2157"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "s3adminsbucketE18F2157",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3adminsbucketE18F2157",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3adminsbucketE18F2157",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/s3-admins-bucket/Policy/Resource"
      }
    },
    "s3adminsbucketAutoDeleteObjectsCustomResource13DE0A5D": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "s3adminsbucketE18F2157"
        }
      },
      "DependsOn": [
        "s3adminsbucketPolicyC6F343A7"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/s3-admins-bucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "sendverificationemaillambdaServiceRole20212DB5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/send-verification-email-lambda/ServiceRole/Resource"
      }
    },
    "sendverificationemaillambdaServiceRoleDefaultPolicy11B6C889": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:SendEmail",
                "ses:SendRawEmail",
                "ses:SendTemplatedEmail"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ses:us-east-1:774004686218:identity/*"
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ECommerceStackBetaadminstableC570C583",
                  "StreamArn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sendverificationemaillambdaServiceRoleDefaultPolicy11B6C889",
        "Roles": [
          {
            "Ref": "sendverificationemaillambdaServiceRole20212DB5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/send-verification-email-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sendverificationemaillambdaFC2DD3A6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3BucketE2B0E7A5"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3VersionKeyEECE885C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3VersionKeyEECE885C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "sendverificationemaillambdaServiceRole20212DB5",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SES_EMAIL_FROM": "araras.lojinha@gmail.com",
            "REGION": "us-east-1",
            "API_ENDPOINT": {
              "Fn::GetAtt": [
                "httpapiE8E4C45A",
                "ApiEndpoint"
              ]
            },
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "ACCESS_TOKEN_NAME": "x-access-token",
            "EMAIL_VERIFICATION_LINK_ENDPOINT": "verify-email",
            "EMAIL_SIGNATURE": "Loja das Artes"
          }
        },
        "Handler": "main.handler",
        "MemorySize": 128,
        "Runtime": "nodejs14.x",
        "Timeout": 3
      },
      "DependsOn": [
        "sendverificationemaillambdaServiceRoleDefaultPolicy11B6C889",
        "sendverificationemaillambdaServiceRole20212DB5"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/send-verification-email-lambda/Resource",
        "aws:asset:path": "asset.de307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "sendverificationemaillambdaDynamoDBEventSourceECommerceStackBetaECommerceStackBetaadminstable2BB03CC9BB6452DE": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "sendverificationemaillambdaFC2DD3A6"
        },
        "BatchSize": 1,
        "BisectBatchOnFunctionError": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ECommerceStackBetaadminstableC570C583",
            "StreamArn"
          ]
        },
        "MaximumRetryAttempts": 10,
        "StartingPosition": "TRIM_HORIZON"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/send-verification-email-lambda/DynamoDBEventSource:ECommerceStackBetaECommerceStackBetaadminstable2BB03CC9/Resource"
      }
    },
    "getverificationemailServiceRole3B5CD231": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-verification-email/ServiceRole/Resource"
      }
    },
    "getverificationemailServiceRoleDefaultPolicy9E3555C5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaadminstableC570C583",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getverificationemailServiceRoleDefaultPolicy9E3555C5",
        "Roles": [
          {
            "Ref": "getverificationemailServiceRole3B5CD231"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-verification-email/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getverificationemail6C977FFB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3Bucket004ACA06"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3VersionKey3279A030"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3VersionKey3279A030"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getverificationemailServiceRole3B5CD231",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "ADMINS_TABLE": "admins",
            "ADMINS_TABLE_PARTITION_KEY": "email"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 5
      },
      "DependsOn": [
        "getverificationemailServiceRoleDefaultPolicy9E3555C5",
        "getverificationemailServiceRole3B5CD231"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/get-verification-email/Resource",
        "aws:asset:path": "asset.f40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "sendforgotpasswordemaillambdaServiceRole17FE743F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/send-forgot-password-email-lambda/ServiceRole/Resource"
      }
    },
    "sendforgotpasswordemaillambdaServiceRoleDefaultPolicy3880CD2F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:SendEmail",
                "ses:SendRawEmail",
                "ses:SendTemplatedEmail"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ses:us-east-1:774004686218:identity/*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "sendforgotpasswordemaillambdaServiceRoleDefaultPolicy3880CD2F",
        "Roles": [
          {
            "Ref": "sendforgotpasswordemaillambdaServiceRole17FE743F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/send-forgot-password-email-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "sendforgotpasswordemaillambda73B2C8A0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3BucketFF9F79E9"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3VersionKey21F1C838"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3VersionKey21F1C838"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "sendforgotpasswordemaillambdaServiceRole17FE743F",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SES_EMAIL_FROM": "araras.lojinha@gmail.com",
            "REGION": "us-east-1",
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "ACCESS_TOKEN_NAME": "x-access-token",
            "CHANGE_FORGOT_PASSWORD_LINK": "alterar-senha",
            "EMAIL_SIGNATURE": "Loja das Artes",
            "ADMIN_CUSTOM_DOMAIN": "localhost:3000",
            "ADMINS_TABLE_PARTITION_KEY": "email"
          }
        },
        "Handler": "main.handler",
        "MemorySize": 128,
        "Runtime": "nodejs14.x",
        "Timeout": 3
      },
      "DependsOn": [
        "sendforgotpasswordemaillambdaServiceRoleDefaultPolicy3880CD2F",
        "sendforgotpasswordemaillambdaServiceRole17FE743F"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/send-forgot-password-email-lambda/Resource",
        "aws:asset:path": "asset.04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695e",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "processexpiredlightningdealsServiceRole32753C51": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/process-expired-lightning-deals/ServiceRole/Resource"
      }
    },
    "processexpiredlightningdealsServiceRoleDefaultPolicyDE7B59EF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackBetaproductstableCD1A0D34",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "processexpiredlightningdealsServiceRoleDefaultPolicyDE7B59EF",
        "Roles": [
          {
            "Ref": "processexpiredlightningdealsServiceRole32753C51"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/process-expired-lightning-deals/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "processexpiredlightningdeals27B7096B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersa782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2S3BucketF946FE17"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2S3VersionKeyCF10F3E9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2S3VersionKeyCF10F3E9"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "processexpiredlightningdealsServiceRole32753C51",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "PRODUCTS_TABLE": "products",
            "PRODUCTS_TABLE_PARTITION_KEY": "id"
          }
        },
        "Handler": "main.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 5
      },
      "DependsOn": [
        "processexpiredlightningdealsServiceRoleDefaultPolicyDE7B59EF",
        "processexpiredlightningdealsServiceRole32753C51"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/process-expired-lightning-deals/Resource",
        "aws:asset:path": "asset.a782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "cronevery5minutes7E81515A": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "processexpiredlightningdeals27B7096B",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/cron-every-5-minutes/Resource"
      }
    },
    "cronevery5minutesAllowEventRuleECommerceStackBetaprocessexpiredlightningdeals8601B19BE6CCA38F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "processexpiredlightningdeals27B7096B",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "cronevery5minutes7E81515A",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/cron-every-5-minutes/AllowEventRuleECommerceStackBetaprocessexpiredlightningdeals8601B19B"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VSy1ICMRD8Fu4hiBy8uqCWHigp4AeG7IBhN49KJlC4tf9ukgVZUU/T88r09GTMx5MHfjd4hKMfirIaNcI45M2KQFRsid4EJ5DNtvo9kA3ECu+RYnYn9Y7NjPbkgqBUsAAHCgkdmwVPRvWbr/hHauHMQZboWpbGN+VJgzLlhjdr2NS5MYOYtnIHhEc48SY2U2Hl+dkLLIQwQRN7Qlubk0KdOfW8xDk/2YELhSl4ZHOkD1Om5Bn9yX1tKtRFiAVOfqY1tz2vZRJUJGc63tkuTC3FKWuTUctqUJsSeJNC6JT0XhrNXoIWlEAMf+PnQ2S9ypPnYG2We6t/R1vmJ0NIV/E8Hyf6vJkGUSHl5TqYms+oM1dyfb8v9eGeN69E9qJwNMm9ETKFliZQh9404c7BZZsb91r3v4ygbC238c6Ftd1Yy6YOtPjIXDNqGSYdfNQ7nPWOtm1bpk2JfO9Hh3H81Xw82Hsphy5+DKmQLzv7BenMqgD0AgAA"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStackBeta/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "apiEndpoint9349E63C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiC8550315"
            },
            ".execute-api.us-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiDeploymentStagedev96712F43"
            },
            "/"
          ]
        ]
      }
    },
    "restApiUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiC8550315"
            },
            ".execute-api.us-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiDeploymentStagedev96712F43"
            },
            "/"
          ]
        ]
      }
    },
    "httpApiUrl": {
      "Value": {
        "Fn::GetAtt": [
          "httpapiE8E4C45A",
          "ApiEndpoint"
        ]
      }
    }
  },
  "Parameters": {
    "AssetParameters0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038S3Bucket800FC910": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038\""
    },
    "AssetParameters0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038S3VersionKey5D46BF7C": {
      "Type": "String",
      "Description": "S3 key for asset version \"0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038\""
    },
    "AssetParameters0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038ArtifactHashBBF53255": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0891c3f6ce2eb578d7f13e05abd92345f9da2cd5212c7d9d693101ddec653038\""
    },
    "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3Bucket438CC9FB": {
      "Type": "String",
      "Description": "S3 bucket for asset \"93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeed\""
    },
    "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedS3VersionKey5BB10098": {
      "Type": "String",
      "Description": "S3 key for asset version \"93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeed\""
    },
    "AssetParameters93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeedArtifactHash95220FBD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"93ee2463720da782fa83bf6824f36c9c2cdb0a66ee78b0e59d6175adef69eeed\""
    },
    "AssetParameters368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02S3BucketDBD3A01B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02\""
    },
    "AssetParameters368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02S3VersionKey51A995BE": {
      "Type": "String",
      "Description": "S3 key for asset version \"368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02\""
    },
    "AssetParameters368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02ArtifactHashA25DCBAB": {
      "Type": "String",
      "Description": "Artifact hash for asset \"368ac2317f55fd489908cdd99c40125da507add16bbe0a19354f4370916e1f02\""
    },
    "AssetParameters3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674aS3BucketB3045CFF": {
      "Type": "String",
      "Description": "S3 bucket for asset \"3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674a\""
    },
    "AssetParameters3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674aS3VersionKeyB75BF7BF": {
      "Type": "String",
      "Description": "S3 key for asset version \"3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674a\""
    },
    "AssetParameters3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674aArtifactHash952E65BC": {
      "Type": "String",
      "Description": "Artifact hash for asset \"3806c469f91f34b250c503eb0cb795b72f9ae7de290c7c9ef5a58bc3aff1674a\""
    },
    "AssetParameters3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98S3BucketA93D1D83": {
      "Type": "String",
      "Description": "S3 bucket for asset \"3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98\""
    },
    "AssetParameters3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98S3VersionKey44DB610C": {
      "Type": "String",
      "Description": "S3 key for asset version \"3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98\""
    },
    "AssetParameters3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98ArtifactHash2222A140": {
      "Type": "String",
      "Description": "Artifact hash for asset \"3ca495c1dc388892651821c8df3a3f9cd3c348b3f02dcafc289e0a1e602d6e98\""
    },
    "AssetParameters50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504aS3BucketF4AD9948": {
      "Type": "String",
      "Description": "S3 bucket for asset \"50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504a\""
    },
    "AssetParameters50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504aS3VersionKey0A142F49": {
      "Type": "String",
      "Description": "S3 key for asset version \"50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504a\""
    },
    "AssetParameters50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504aArtifactHash03CB69BE": {
      "Type": "String",
      "Description": "Artifact hash for asset \"50062ae66eb2887d7ada9b8983e411df84083b9d5af2d80eb294bab7dba5504a\""
    },
    "AssetParameters9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564S3BucketC449AF29": {
      "Type": "String",
      "Description": "S3 bucket for asset \"9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564\""
    },
    "AssetParameters9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564S3VersionKeyADBD0E33": {
      "Type": "String",
      "Description": "S3 key for asset version \"9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564\""
    },
    "AssetParameters9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564ArtifactHash6233C366": {
      "Type": "String",
      "Description": "Artifact hash for asset \"9264f6474be63ffe1a95366105e8191f79cd73e513983b4eee217d0cf75db564\""
    },
    "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3Bucket45DEBC6B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cec\""
    },
    "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecS3VersionKeyBD68D59C": {
      "Type": "String",
      "Description": "S3 key for asset version \"f616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cec\""
    },
    "AssetParametersf616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cecArtifactHash999E0266": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f616df0f8f9c6cafaf736bd76e704eb8540e146262d7af4fcecfde035b2f6cec\""
    },
    "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3Bucket90EA2ADD": {
      "Type": "String",
      "Description": "S3 bucket for asset \"22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6c\""
    },
    "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cS3VersionKey4001853F": {
      "Type": "String",
      "Description": "S3 key for asset version \"22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6c\""
    },
    "AssetParameters22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6cArtifactHash22D5762A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"22691235f757b7ccae5f55bc79f9ca25ba9b65af457c0bd5bf497e9f34761c6c\""
    },
    "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3Bucket9F5774BC": {
      "Type": "String",
      "Description": "S3 bucket for asset \"8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549a\""
    },
    "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aS3VersionKeyBD2D14C7": {
      "Type": "String",
      "Description": "S3 key for asset version \"8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549a\""
    },
    "AssetParameters8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549aArtifactHash577AA14A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"8522a2befd4c34e1479b5bd5bf02e0350fac112667d0b32b707e605c6828549a\""
    },
    "AssetParametersf2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677S3Bucket95CB0981": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677\""
    },
    "AssetParametersf2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677S3VersionKeyABAEA5F8": {
      "Type": "String",
      "Description": "S3 key for asset version \"f2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677\""
    },
    "AssetParametersf2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677ArtifactHash42B08B56": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f2e99658e5918ced717acbf5fb1b9b3fc3a41f9d453f3ab6fba0b9e5764b1677\""
    },
    "AssetParametersb958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961S3Bucket529420EA": {
      "Type": "String",
      "Description": "S3 bucket for asset \"b958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961\""
    },
    "AssetParametersb958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961S3VersionKeyF1663313": {
      "Type": "String",
      "Description": "S3 key for asset version \"b958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961\""
    },
    "AssetParametersb958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961ArtifactHashFF110A2A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"b958747a4b9f44eda8e7de349e01b12afe2961109e6d3147dc8c8da72f52b961\""
    },
    "AssetParameters0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039S3Bucket24BE3954": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039\""
    },
    "AssetParameters0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039S3VersionKeyAA798655": {
      "Type": "String",
      "Description": "S3 key for asset version \"0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039\""
    },
    "AssetParameters0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039ArtifactHash46925013": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0b209b2aa69b15e8e568cb244d4310493f976efd07f0e68cfb697c2e1693b039\""
    },
    "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3BucketF8737F0F": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018\""
    },
    "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018S3VersionKey071F0598": {
      "Type": "String",
      "Description": "S3 key for asset version \"f926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018\""
    },
    "AssetParametersf926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018ArtifactHashBC64EC6A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f926bba58455ddecfa9f7bdf364c5ab6a234c08a7939178606e8613aa391a018\""
    },
    "AssetParametersc68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cecS3BucketE008BB35": {
      "Type": "String",
      "Description": "S3 bucket for asset \"c68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cec\""
    },
    "AssetParametersc68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cecS3VersionKeyA905EF31": {
      "Type": "String",
      "Description": "S3 key for asset version \"c68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cec\""
    },
    "AssetParametersc68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cecArtifactHashD10B8038": {
      "Type": "String",
      "Description": "Artifact hash for asset \"c68ba3da42ab7a143674a13962e4c897968205580872836e56fc964ad09a3cec\""
    },
    "AssetParameters896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904S3BucketCA7EFF0E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904\""
    },
    "AssetParameters896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904S3VersionKey8067D23F": {
      "Type": "String",
      "Description": "S3 key for asset version \"896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904\""
    },
    "AssetParameters896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904ArtifactHashB9299B4A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"896cdb18fa4381d373df24d9784069839b62c1bd46d6bbe21b2c5597555b8904\""
    },
    "AssetParametersf484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875aS3BucketACA5C930": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875a\""
    },
    "AssetParametersf484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875aS3VersionKeyFDB3B0F7": {
      "Type": "String",
      "Description": "S3 key for asset version \"f484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875a\""
    },
    "AssetParametersf484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875aArtifactHash2D5852B2": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f484112698e31859f63439509179e5b4dee895810d0e578ab626288d9e05875a\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3Bucket4842F32D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A": {
      "Type": "String",
      "Description": "S3 key for asset version \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1ArtifactHash0128B949": {
      "Type": "String",
      "Description": "Artifact hash for asset \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3BucketE2B0E7A5": {
      "Type": "String",
      "Description": "S3 bucket for asset \"de307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5\""
    },
    "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5S3VersionKeyEECE885C": {
      "Type": "String",
      "Description": "S3 key for asset version \"de307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5\""
    },
    "AssetParametersde307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5ArtifactHash59467227": {
      "Type": "String",
      "Description": "Artifact hash for asset \"de307f4ba32a5436b1b9460c9d77adbb6c6699415e90502133b4153c44864ac5\""
    },
    "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3Bucket004ACA06": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083\""
    },
    "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083S3VersionKey3279A030": {
      "Type": "String",
      "Description": "S3 key for asset version \"f40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083\""
    },
    "AssetParametersf40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083ArtifactHashB3F0AE6F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f40f1872ed29f243a4bfa10c7908d5a9d2cf3ffc9f06546d745c026eefbfa083\""
    },
    "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3BucketFF9F79E9": {
      "Type": "String",
      "Description": "S3 bucket for asset \"04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695e\""
    },
    "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eS3VersionKey21F1C838": {
      "Type": "String",
      "Description": "S3 key for asset version \"04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695e\""
    },
    "AssetParameters04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695eArtifactHash34F31763": {
      "Type": "String",
      "Description": "Artifact hash for asset \"04136686f54e2b0b8a1b2e214f338e1c4cd01cde72fb15e883cdacdd198e695e\""
    },
    "AssetParametersa782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2S3BucketF946FE17": {
      "Type": "String",
      "Description": "S3 bucket for asset \"a782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2\""
    },
    "AssetParametersa782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2S3VersionKeyCF10F3E9": {
      "Type": "String",
      "Description": "S3 key for asset version \"a782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2\""
    },
    "AssetParametersa782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2ArtifactHash046733CD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"a782835ad5b19e84478b541d3ed2469eb03a7667b21c71619e13f23c44ba96d2\""
    }
  }
}