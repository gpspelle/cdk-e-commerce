{
  "Resources": {
    "ECommerceStackproductstable86592532": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "products"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/ECommerceStack-products-table/Resource"
      }
    },
    "ECommerceStackadminstable6CC65C3E": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "email",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "email",
            "AttributeType": "S"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        },
        "TableName": "admins"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/ECommerceStack-admins-table/Resource"
      }
    },
    "ECommerceStackproducttagstableE266D4EB": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "TAG_NAME",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "TAG_NAME",
            "AttributeType": "S"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "productTags"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/ECommerceStack-product-tags-table/Resource"
      }
    },
    "apiC8550315": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "e-commerce rest api gateway",
        "Name": "api"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Resource"
      }
    },
    "apiCloudWatchRoleAC81D93E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/CloudWatchRole/Resource"
      }
    },
    "apiAccount57E28B43": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "apiCloudWatchRoleAC81D93E",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "apiC8550315"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Account"
      }
    },
    "apiDeployment149F1294e11befc0d7b18865d808560af611e8f6": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "apiaccountOPTIONS8E2572AD",
        "apiaccountPUTDA39F327",
        "apiaccount7E8D5771",
        "apiaccountsGETB86617AD",
        "apiaccountsOPTIONS4256F313",
        "apiaccounts738F8F89",
        "apicustomerproductGET896F0605",
        "apicustomerproductOPTIONS53EA1F03",
        "apicustomerproductDCCB8D74",
        "apicustomerproductsGET6E9158BC",
        "apicustomerproductsOPTIONS7DC47F66",
        "apicustomerproducts9CD518B6",
        "apiloginOPTIONS7404BF99",
        "apiloginPOSTAD6F9831",
        "apilogin14037FF2",
        "apiOPTIONS5A1027A6",
        "apiproductDELETEE4DDDF9A",
        "apiproductOPTIONS4D2F1755",
        "apiproductPATCHAAB8AB93",
        "apiproductPUTAA3394CE",
        "apiproduct211E8A85",
        "apiproductsGETCE98977B",
        "apiproductsOPTIONS054C0992",
        "apiproductsA7D90674",
        "apitagsGETBF6CB0C9",
        "apitagsOPTIONSF0140192",
        "apitagsPUTD8DBD01F",
        "apitagsCCC680EE"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Deployment/Resource"
      }
    },
    "apiDeploymentStagedev96712F43": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "DeploymentId": {
          "Ref": "apiDeployment149F1294e11befc0d7b18865d808560af611e8f6"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "apiAccount57E28B43"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/DeploymentStage.dev/Resource"
      }
    },
    "apiOPTIONS5A1027A6": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/OPTIONS/Resource"
      }
    },
    "apiaccount7E8D5771": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "account",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/account/Resource"
      }
    },
    "apiaccountOPTIONS8E2572AD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/account/OPTIONS/Resource"
      }
    },
    "apiaccountPUTApiPermissionECommerceStackapi77EDABDFPUTaccountEA0C3714": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putaccountlambdaA0802262",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/account/PUT/ApiPermission.ECommerceStackapi77EDABDF.PUT..account"
      }
    },
    "apiaccountPUTApiPermissionTestECommerceStackapi77EDABDFPUTaccountED1D67CB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putaccountlambdaA0802262",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/account"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/account/PUT/ApiPermission.Test.ECommerceStackapi77EDABDF.PUT..account"
      }
    },
    "apiaccountPUTDA39F327": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apiaccount7E8D5771"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "putaccountlambdaA0802262",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/account/PUT/Resource"
      }
    },
    "apiaccounts738F8F89": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "accounts",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/accounts/Resource"
      }
    },
    "apiaccountsOPTIONS4256F313": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiaccounts738F8F89"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/accounts/OPTIONS/Resource"
      }
    },
    "apiaccountsGETApiPermissionECommerceStackapi77EDABDFGETaccountsA21D79B5": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountslambda902DEA8D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/accounts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/accounts/GET/ApiPermission.ECommerceStackapi77EDABDF.GET..accounts"
      }
    },
    "apiaccountsGETApiPermissionTestECommerceStackapi77EDABDFGETaccountsEF2E405D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getaccountslambda902DEA8D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/accounts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/accounts/GET/ApiPermission.Test.ECommerceStackapi77EDABDF.GET..accounts"
      }
    },
    "apiaccountsGETB86617AD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apiaccounts738F8F89"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getaccountslambda902DEA8D",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/accounts/GET/Resource"
      }
    },
    "apilogin14037FF2": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "login",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/login/Resource"
      }
    },
    "apiloginOPTIONS7404BF99": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apilogin14037FF2"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/login/OPTIONS/Resource"
      }
    },
    "apiloginPOSTApiPermissionECommerceStackapi77EDABDFPOSTlogin36FBB4F4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postloginlambdaC7BFFE1D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/POST/login"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/login/POST/ApiPermission.ECommerceStackapi77EDABDF.POST..login"
      }
    },
    "apiloginPOSTApiPermissionTestECommerceStackapi77EDABDFPOSTloginDFFB840A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postloginlambdaC7BFFE1D",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/POST/login"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/login/POST/ApiPermission.Test.ECommerceStackapi77EDABDF.POST..login"
      }
    },
    "apiloginPOSTAD6F9831": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "apilogin14037FF2"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "postloginlambdaC7BFFE1D",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/login/POST/Resource"
      }
    },
    "apiproduct211E8A85": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "product",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/Resource"
      }
    },
    "apiproductOPTIONS4D2F1755": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/OPTIONS/Resource"
      }
    },
    "apiproductPUTApiPermissionECommerceStackapi77EDABDFPUTproduct673860CA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putproductlambda887F64D5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/PUT/ApiPermission.ECommerceStackapi77EDABDF.PUT..product"
      }
    },
    "apiproductPUTApiPermissionTestECommerceStackapi77EDABDFPUTproduct9A89C9FD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "putproductlambda887F64D5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/PUT/ApiPermission.Test.ECommerceStackapi77EDABDF.PUT..product"
      }
    },
    "apiproductPUTAA3394CE": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "putproductlambda887F64D5",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/PUT/Resource"
      }
    },
    "apiproductDELETEApiPermissionECommerceStackapi77EDABDFDELETEproduct2079F831": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteproductlambdaEA497826",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/DELETE/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/DELETE/ApiPermission.ECommerceStackapi77EDABDF.DELETE..product"
      }
    },
    "apiproductDELETEApiPermissionTestECommerceStackapi77EDABDFDELETEproduct977D39AF": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteproductlambdaEA497826",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/DELETE/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/DELETE/ApiPermission.Test.ECommerceStackapi77EDABDF.DELETE..product"
      }
    },
    "apiproductDELETEE4DDDF9A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteproductlambdaEA497826",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/DELETE/Resource"
      }
    },
    "apiproductPATCHApiPermissionECommerceStackapi77EDABDFPATCHproduct48DFD604": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchproductlambdaB9500F3A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PATCH/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/PATCH/ApiPermission.ECommerceStackapi77EDABDF.PATCH..product"
      }
    },
    "apiproductPATCHApiPermissionTestECommerceStackapi77EDABDFPATCHproductC767036C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "patchproductlambdaB9500F3A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PATCH/product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/PATCH/ApiPermission.Test.ECommerceStackapi77EDABDF.PATCH..product"
      }
    },
    "apiproductPATCHAAB8AB93": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "apiproduct211E8A85"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "patchproductlambdaB9500F3A",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/product/PATCH/Resource"
      }
    },
    "apiproductsA7D90674": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "products",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/products/Resource"
      }
    },
    "apiproductsOPTIONS054C0992": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiproductsA7D90674"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/products/OPTIONS/Resource"
      }
    },
    "apiproductsGETApiPermissionECommerceStackapi77EDABDFGETproducts0D1F88F0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getproductslambda0220F63B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/products/GET/ApiPermission.ECommerceStackapi77EDABDF.GET..products"
      }
    },
    "apiproductsGETApiPermissionTestECommerceStackapi77EDABDFGETproducts72C7BC39": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getproductslambda0220F63B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/products/GET/ApiPermission.Test.ECommerceStackapi77EDABDF.GET..products"
      }
    },
    "apiproductsGETCE98977B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apiproductsA7D90674"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "jwttokenadminauth00C9E0A9"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getproductslambda0220F63B",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/products/GET/Resource"
      }
    },
    "apicustomerproductDCCB8D74": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "customer-product",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-product/Resource"
      }
    },
    "apicustomerproductOPTIONS53EA1F03": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apicustomerproductDCCB8D74"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-product/OPTIONS/Resource"
      }
    },
    "apicustomerproductGETApiPermissionECommerceStackapi77EDABDFGETcustomerproductBDE2F2F6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductlambda7E8DD103",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/customer-product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-product/GET/ApiPermission.ECommerceStackapi77EDABDF.GET..customer-product"
      }
    },
    "apicustomerproductGETApiPermissionTestECommerceStackapi77EDABDFGETcustomerproductB0638D29": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductlambda7E8DD103",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/customer-product"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-product/GET/ApiPermission.Test.ECommerceStackapi77EDABDF.GET..customer-product"
      }
    },
    "apicustomerproductGET896F0605": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apicustomerproductDCCB8D74"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getcustomerproductlambda7E8DD103",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-product/GET/Resource"
      }
    },
    "apicustomerproducts9CD518B6": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "customer-products",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-products/Resource"
      }
    },
    "apicustomerproductsOPTIONS7DC47F66": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apicustomerproducts9CD518B6"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-products/OPTIONS/Resource"
      }
    },
    "apicustomerproductsGETApiPermissionECommerceStackapi77EDABDFGETcustomerproducts095834DA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductslambda79C12DA3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/customer-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-products/GET/ApiPermission.ECommerceStackapi77EDABDF.GET..customer-products"
      }
    },
    "apicustomerproductsGETApiPermissionTestECommerceStackapi77EDABDFGETcustomerproducts458DEC18": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getcustomerproductslambda79C12DA3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/customer-products"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-products/GET/ApiPermission.Test.ECommerceStackapi77EDABDF.GET..customer-products"
      }
    },
    "apicustomerproductsGET6E9158BC": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apicustomerproducts9CD518B6"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getcustomerproductslambda79C12DA3",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/customer-products/GET/Resource"
      }
    },
    "apitagsCCC680EE": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "tags",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/tags/Resource"
      }
    },
    "apitagsOPTIONSF0140192": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apitagsCCC680EE"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-access-token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/tags/OPTIONS/Resource"
      }
    },
    "apitagsPUTApiPermissionECommerceStackapi77EDABDFPUTtagsB3FEEB30": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "puttagslambda852785DE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/PUT/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/tags/PUT/ApiPermission.ECommerceStackapi77EDABDF.PUT..tags"
      }
    },
    "apitagsPUTApiPermissionTestECommerceStackapi77EDABDFPUTtags977F69B1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "puttagslambda852785DE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/tags/PUT/ApiPermission.Test.ECommerceStackapi77EDABDF.PUT..tags"
      }
    },
    "apitagsPUTD8DBD01F": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apitagsCCC680EE"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "puttagslambda852785DE",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/tags/PUT/Resource"
      }
    },
    "apitagsGETApiPermissionECommerceStackapi77EDABDFGETtagsA338D85B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "gettagslambda917EA6B4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStagedev96712F43"
              },
              "/GET/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/tags/GET/ApiPermission.ECommerceStackapi77EDABDF.GET..tags"
      }
    },
    "apitagsGETApiPermissionTestECommerceStackapi77EDABDFGETtags3F5AD55A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "gettagslambda917EA6B4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/tags/GET/ApiPermission.Test.ECommerceStackapi77EDABDF.GET..tags"
      }
    },
    "apitagsGETBF6CB0C9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apitagsCCC680EE"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "gettagslambda917EA6B4",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/api/Default/tags/GET/Resource"
      }
    },
    "adminauthlambdaServiceRole16E8F46B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/admin-auth-lambda/ServiceRole/Resource"
      }
    },
    "adminauthlambda5ADA16C5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19S3Bucket7A95131E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19S3VersionKeyD4F12100"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19S3VersionKeyD4F12100"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "adminauthlambdaServiceRole16E8F46B",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "REGION": "us-east-1",
            "ACCOUNT": "453299922179",
            "STAGE": "dev",
            "API_ID": {
              "Ref": "apiC8550315"
            }
          }
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "adminauthlambdaServiceRole16E8F46B"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/admin-auth-lambda/Resource",
        "aws:asset:path": "asset.030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "adminauthlambdaECommerceStackjwttokenadminauth4F279A61Permissions4F3A57EC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "adminauthlambda5ADA16C5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "apiC8550315"
              },
              "/authorizers/",
              {
                "Ref": "jwttokenadminauth00C9E0A9"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/admin-auth-lambda/ECommerceStackjwttokenadminauth4F279A61:Permissions"
      }
    },
    "jwttokenadminauth00C9E0A9": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "Name": "ECommerceStackjwttokenadminauth4F279A61",
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Type": "TOKEN",
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "adminauthlambda5ADA16C5",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "IdentitySource": "method.request.header.x-access-token"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/jwt-token-admin-auth/Resource"
      }
    },
    "httpapiE8E4C45A": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Description": "e-commerce http api gateway",
        "Name": "http-api",
        "ProtocolType": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/http-api/Resource"
      }
    },
    "httpapiDefaultStage7AF19DCA": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "StageName": "$default",
        "AutoDeploy": true
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/http-api/DefaultStage/Resource"
      }
    },
    "httpapiGETemailEmailVerificationIntegrationPermission23A8361B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getverificationemail6C977FFB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/*/*/email"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/http-api/GET--email/EmailVerificationIntegration-Permission"
      }
    },
    "httpapiGETemailEmailVerificationIntegrationB943AA3D": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "getverificationemail6C977FFB",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/http-api/GET--email/EmailVerificationIntegration/Resource"
      }
    },
    "httpapiGETemailD72F8619": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "RouteKey": "GET /email",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "httpapiEmailVerificationAuthorizer0BA5A02E"
        },
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "httpapiGETemailEmailVerificationIntegrationB943AA3D"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/http-api/GET--email/Resource"
      }
    },
    "httpapiEmailVerificationAuthorizer0BA5A02E": {
      "Type": "AWS::ApiGatewayV2::Authorizer",
      "Properties": {
        "ApiId": {
          "Ref": "httpapiE8E4C45A"
        },
        "AuthorizerType": "REQUEST",
        "Name": "EmailVerificationAuthorizer",
        "AuthorizerPayloadFormatVersion": "2.0",
        "AuthorizerResultTtlInSeconds": 300,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "emailauthlambda1EBD14F9",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "EnableSimpleResponses": true,
        "IdentitySource": [
          "$request.querystring.x-access-token"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/http-api/EmailVerificationAuthorizer/Resource"
      }
    },
    "httpapiECommerceStackhttpapiEmailVerificationAuthorizer2867C041Permission54B2590D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "emailauthlambda1EBD14F9",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:453299922179:",
              {
                "Ref": "httpapiE8E4C45A"
              },
              "/authorizers/",
              {
                "Ref": "httpapiEmailVerificationAuthorizer0BA5A02E"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/http-api/ECommerceStackhttpapiEmailVerificationAuthorizer2867C041-Permission"
      }
    },
    "putaccountlambdaServiceRoleA8C81C5B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/put-account-lambda/ServiceRole/Resource"
      }
    },
    "putaccountlambdaServiceRoleDefaultPolicy8B416564": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackadminstable6CC65C3E",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "putaccountlambdaServiceRoleDefaultPolicy8B416564",
        "Roles": [
          {
            "Ref": "putaccountlambdaServiceRoleA8C81C5B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/put-account-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "putaccountlambdaA0802262": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95S3BucketBAFFD057"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95S3VersionKey6741FDA9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95S3VersionKey6741FDA9"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "putaccountlambdaServiceRoleA8C81C5B",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "putaccountlambdaServiceRoleDefaultPolicy8B416564",
        "putaccountlambdaServiceRoleA8C81C5B"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/put-account-lambda/Resource",
        "aws:asset:path": "asset.4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getaccountslambdaServiceRoleCF9DA346": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-accounts-lambda/ServiceRole/Resource"
      }
    },
    "getaccountslambdaServiceRoleDefaultPolicyF14E7A9E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackadminstable6CC65C3E",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getaccountslambdaServiceRoleDefaultPolicyF14E7A9E",
        "Roles": [
          {
            "Ref": "getaccountslambdaServiceRoleCF9DA346"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-accounts-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getaccountslambda902DEA8D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42S3BucketC2E3CE4E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42S3VersionKeyE3DD0FEC"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42S3VersionKeyE3DD0FEC"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getaccountslambdaServiceRoleCF9DA346",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getaccountslambdaServiceRoleDefaultPolicyF14E7A9E",
        "getaccountslambdaServiceRoleCF9DA346"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-accounts-lambda/Resource",
        "aws:asset:path": "asset.2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "postloginlambdaServiceRole5FBE01F4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/post-login-lambda/ServiceRole/Resource"
      }
    },
    "postloginlambdaServiceRoleDefaultPolicyA9899A24": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackadminstable6CC65C3E",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "postloginlambdaServiceRoleDefaultPolicyA9899A24",
        "Roles": [
          {
            "Ref": "postloginlambdaServiceRole5FBE01F4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/post-login-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "postloginlambdaC7BFFE1D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429feS3Bucket03898B81"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429feS3VersionKey39232727"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429feS3VersionKey39232727"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "postloginlambdaServiceRole5FBE01F4",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ",
            "REGION": "us-east-1"
          }
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "postloginlambdaServiceRoleDefaultPolicyA9899A24",
        "postloginlambdaServiceRole5FBE01F4"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/post-login-lambda/Resource",
        "aws:asset:path": "asset.ab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429fe",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getproductslambdaServiceRoleEDEF75F9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-products-lambda/ServiceRole/Resource"
      }
    },
    "getproductslambdaServiceRoleDefaultPolicyE01DE73D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproductstable86592532",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getproductslambdaServiceRoleDefaultPolicyE01DE73D",
        "Roles": [
          {
            "Ref": "getproductslambdaServiceRoleEDEF75F9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-products-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getproductslambda0220F63B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446S3Bucket6CABC863"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446S3VersionKey09128DB1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446S3VersionKey09128DB1"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getproductslambdaServiceRoleEDEF75F9",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getproductslambdaServiceRoleDefaultPolicyE01DE73D",
        "getproductslambdaServiceRoleEDEF75F9"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-products-lambda/Resource",
        "aws:asset:path": "asset.8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getcustomerproductlambdaServiceRoleF7F7DF3F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-customer-product-lambda/ServiceRole/Resource"
      }
    },
    "getcustomerproductlambdaServiceRoleDefaultPolicyAB8C18AB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproductstable86592532",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getcustomerproductlambdaServiceRoleDefaultPolicyAB8C18AB",
        "Roles": [
          {
            "Ref": "getcustomerproductlambdaServiceRoleF7F7DF3F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-customer-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getcustomerproductlambda7E8DD103": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersbe8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662cS3Bucket3BFCD5B3"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbe8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662cS3VersionKeyA8606FFA"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbe8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662cS3VersionKeyA8606FFA"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getcustomerproductlambdaServiceRoleF7F7DF3F",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getcustomerproductlambdaServiceRoleDefaultPolicyAB8C18AB",
        "getcustomerproductlambdaServiceRoleF7F7DF3F"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-customer-product-lambda/Resource",
        "aws:asset:path": "asset.be8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662c",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getcustomerproductslambdaServiceRoleBBAD3B7C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-customer-products-lambda/ServiceRole/Resource"
      }
    },
    "getcustomerproductslambdaServiceRoleDefaultPolicy717367D1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproductstable86592532",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getcustomerproductslambdaServiceRoleDefaultPolicy717367D1",
        "Roles": [
          {
            "Ref": "getcustomerproductslambdaServiceRoleBBAD3B7C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-customer-products-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getcustomerproductslambda79C12DA3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37S3BucketE764BD3B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37S3VersionKey810256FF"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37S3VersionKey810256FF"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getcustomerproductslambdaServiceRoleBBAD3B7C",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getcustomerproductslambdaServiceRoleDefaultPolicy717367D1",
        "getcustomerproductslambdaServiceRoleBBAD3B7C"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-customer-products-lambda/Resource",
        "aws:asset:path": "asset.ce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "putproductlambdaServiceRole2AB129BC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/put-product-lambda/ServiceRole/Resource"
      }
    },
    "putproductlambdaServiceRoleDefaultPolicy54F4655F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproductstable86592532",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproducttagstableE266D4EB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "putproductlambdaServiceRoleDefaultPolicy54F4655F",
        "Roles": [
          {
            "Ref": "putproductlambdaServiceRole2AB129BC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/put-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "putproductlambda887F64D5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameterse715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240S3BucketB8C03864"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240S3VersionKeyBC3B1610"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240S3VersionKeyBC3B1610"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "putproductlambdaServiceRole2AB129BC",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "putproductlambdaServiceRoleDefaultPolicy54F4655F",
        "putproductlambdaServiceRole2AB129BC"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/put-product-lambda/Resource",
        "aws:asset:path": "asset.e715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "deleteproductlambdaServiceRole807E7403": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/delete-product-lambda/ServiceRole/Resource"
      }
    },
    "deleteproductlambdaServiceRoleDefaultPolicy34BA7ED0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproductstable86592532",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproducttagstableE266D4EB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteproductlambdaServiceRoleDefaultPolicy34BA7ED0",
        "Roles": [
          {
            "Ref": "deleteproductlambdaServiceRole807E7403"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/delete-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteproductlambdaEA497826": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890S3Bucket39601392"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890S3VersionKeyB904EDA2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890S3VersionKeyB904EDA2"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "deleteproductlambdaServiceRole807E7403",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "deleteproductlambdaServiceRoleDefaultPolicy34BA7ED0",
        "deleteproductlambdaServiceRole807E7403"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/delete-product-lambda/Resource",
        "aws:asset:path": "asset.0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "patchproductlambdaServiceRole0B5E1A11": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/patch-product-lambda/ServiceRole/Resource"
      }
    },
    "patchproductlambdaServiceRoleDefaultPolicy3AC750CB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproductstable86592532",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproducttagstableE266D4EB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "patchproductlambdaServiceRoleDefaultPolicy3AC750CB",
        "Roles": [
          {
            "Ref": "patchproductlambdaServiceRole0B5E1A11"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/patch-product-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "patchproductlambdaB9500F3A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72S3Bucket51D038A5"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72S3VersionKeyB66B9A0E"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72S3VersionKeyB66B9A0E"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "patchproductlambdaServiceRole0B5E1A11",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "patchproductlambdaServiceRoleDefaultPolicy3AC750CB",
        "patchproductlambdaServiceRole0B5E1A11"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/patch-product-lambda/Resource",
        "aws:asset:path": "asset.0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "puttagslambdaServiceRole37F6000D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/put-tags-lambda/ServiceRole/Resource"
      }
    },
    "puttagslambdaServiceRoleDefaultPolicy4EA0C565": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproducttagstableE266D4EB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "puttagslambdaServiceRoleDefaultPolicy4EA0C565",
        "Roles": [
          {
            "Ref": "puttagslambdaServiceRole37F6000D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/put-tags-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "puttagslambda852785DE": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersbd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5S3BucketF3A8EFB6"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5S3VersionKeyE194165C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5S3VersionKeyE194165C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "puttagslambdaServiceRole37F6000D",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "puttagslambdaServiceRoleDefaultPolicy4EA0C565",
        "puttagslambdaServiceRole37F6000D"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/put-tags-lambda/Resource",
        "aws:asset:path": "asset.bd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "gettagslambdaServiceRole2F6F5683": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-tags-lambda/ServiceRole/Resource"
      }
    },
    "gettagslambdaServiceRoleDefaultPolicy40148E85": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackproducttagstableE266D4EB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "gettagslambdaServiceRoleDefaultPolicy40148E85",
        "Roles": [
          {
            "Ref": "gettagslambdaServiceRole2F6F5683"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-tags-lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "gettagslambda917EA6B4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4S3Bucket0506E924"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4S3VersionKeyE06A17E9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4S3VersionKeyE06A17E9"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "gettagslambdaServiceRole2F6F5683",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x",
        "Timeout": 100
      },
      "DependsOn": [
        "gettagslambdaServiceRoleDefaultPolicy40148E85",
        "gettagslambdaServiceRole2F6F5683"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-tags-lambda/Resource",
        "aws:asset:path": "asset.79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "s3bucket64CB25AF": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": "e-commerce-images-bucket",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "POST",
                "PUT"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 90
              },
              "ExpirationInDays": 365,
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30
                }
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/s3-bucket/Resource"
      }
    },
    "s3bucketPolicyF7E91061": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3bucket64CB25AF"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "s3bucket64CB25AF",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucket64CB25AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucket64CB25AF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/s3-bucket/Policy/Resource"
      }
    },
    "s3bucketAutoDeleteObjectsCustomResource839C6F53": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "s3bucket64CB25AF"
        }
      },
      "DependsOn": [
        "s3bucketPolicyF7E91061"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/s3-bucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3Bucket4842F32D"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "s3bucket64CB25AF"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
        "aws:asset:path": "asset.1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1",
        "aws:asset:property": "Code"
      }
    },
    "mailerfunctionServiceRole3352EDD5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/mailer-function/ServiceRole/Resource"
      }
    },
    "mailerfunctionServiceRoleDefaultPolicy277D7D8B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:SendEmail",
                "ses:SendRawEmail",
                "ses:SendTemplatedEmail"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ses:us-east-1:453299922179:identity/gpsunicamp016@gmail.com"
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ECommerceStackadminstable6CC65C3E",
                  "StreamArn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mailerfunctionServiceRoleDefaultPolicy277D7D8B",
        "Roles": [
          {
            "Ref": "mailerfunctionServiceRole3352EDD5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/mailer-function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "mailerfunction0BFEF8E7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859S3BucketD7F81F31"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859S3VersionKey37E1CF4B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859S3VersionKey37E1CF4B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "mailerfunctionServiceRole3352EDD5",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SES_EMAIL_FROM": "gpsunicamp016@gmail.com",
            "REGION": "us-east-1",
            "API_ENDPOINT": {
              "Fn::GetAtt": [
                "httpapiE8E4C45A",
                "ApiEndpoint"
              ]
            },
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ"
          }
        },
        "Handler": "index.main",
        "MemorySize": 128,
        "Runtime": "nodejs14.x",
        "Timeout": 3
      },
      "DependsOn": [
        "mailerfunctionServiceRoleDefaultPolicy277D7D8B",
        "mailerfunctionServiceRole3352EDD5"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/mailer-function/Resource",
        "aws:asset:path": "asset.531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "mailerfunctionDynamoDBEventSourceECommerceStackECommerceStackadminstableBF436AFE3287D58E": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "mailerfunction0BFEF8E7"
        },
        "BatchSize": 1,
        "BisectBatchOnFunctionError": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ECommerceStackadminstable6CC65C3E",
            "StreamArn"
          ]
        },
        "MaximumRetryAttempts": 10,
        "StartingPosition": "TRIM_HORIZON"
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/mailer-function/DynamoDBEventSource:ECommerceStackECommerceStackadminstableBF436AFE/Resource"
      }
    },
    "emailauthlambdaServiceRole678A063B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/email-auth-lambda/ServiceRole/Resource"
      }
    },
    "emailauthlambda1EBD14F9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41bS3Bucket13EDA236"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41bS3VersionKey42C4E37A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41bS3VersionKey42C4E37A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "emailauthlambdaServiceRole678A063B",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET": "e49Y1pFtBrorAwMduJTf08REXruydmUQ"
          }
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "emailauthlambdaServiceRole678A063B"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/email-auth-lambda/Resource",
        "aws:asset:path": "asset.168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41b",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getverificationemailServiceRole3B5CD231": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-verification-email/ServiceRole/Resource"
      }
    },
    "getverificationemailServiceRoleDefaultPolicy9E3555C5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECommerceStackadminstable6CC65C3E",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getverificationemailServiceRoleDefaultPolicy9E3555C5",
        "Roles": [
          {
            "Ref": "getverificationemailServiceRole3B5CD231"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-verification-email/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getverificationemail6C977FFB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54feS3Bucket8687F519"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54feS3VersionKey3C077698"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54feS3VersionKey3C077698"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getverificationemailServiceRole3B5CD231",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "ADMINS_TABLE": "admins"
          }
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x",
        "Timeout": 5
      },
      "DependsOn": [
        "getverificationemailServiceRoleDefaultPolicy9E3555C5",
        "getverificationemailServiceRole3B5CD231"
      ],
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/get-verification-email/Resource",
        "aws:asset:path": "asset.3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54fe",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VSwXLCIBD9Fu+ITT302mjbaQ9OHfUHkKwpJkAGFp2Uyb8XiKmpbU/73i4Lb9+S0Wz+QO8mj+xsp7yoZp5rA9RvkfGKbMBqZziQ5UG9O2wcktxawFAthSrJUiuLxnGMB9bMMAkIhiydRS3HzVf8o7Q2+iQKMB2Jz/uiVUzqYk/9ju3r1JhAKDeiZAhn1lIfmjFvxOXaAeaca6eQPEFT61aCSppGLGpOV/ZgkLBgFsgK8EMXsXhBf2rf6QpU7sIBIz7jmIcR64hgMojTve4U17oWvE3eJNSRmsl9waiPKTBSWCu0Ii9OcYwgpL/x8ymo3qaXV6xpkt0H9TvbETufsrgVS9NyAqd+4XgFmIbrYWy+oD5cxY352OrTPfWviM3gcAiR3hgZUxvtsEdvCqE0bJjmhl7P/Wtj1xGlC6BHOztl4WfSbHK0QkxNWK6QQDd9/AIhVkVYuAIAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "ECommerceStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "apiEndpoint9349E63C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiC8550315"
            },
            ".execute-api.us-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiDeploymentStagedev96712F43"
            },
            "/"
          ]
        ]
      }
    },
    "restApiUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiC8550315"
            },
            ".execute-api.us-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiDeploymentStagedev96712F43"
            },
            "/"
          ]
        ]
      }
    },
    "httpApiUrl": {
      "Value": {
        "Fn::GetAtt": [
          "httpapiE8E4C45A",
          "ApiEndpoint"
        ]
      }
    }
  },
  "Parameters": {
    "AssetParameters030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19S3Bucket7A95131E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19\""
    },
    "AssetParameters030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19S3VersionKeyD4F12100": {
      "Type": "String",
      "Description": "S3 key for asset version \"030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19\""
    },
    "AssetParameters030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19ArtifactHashBB3FA71F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"030875608f19c0712bd0de65377aaf9689e96299ce61f65fc91dc64d3ffe5e19\""
    },
    "AssetParameters4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95S3BucketBAFFD057": {
      "Type": "String",
      "Description": "S3 bucket for asset \"4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95\""
    },
    "AssetParameters4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95S3VersionKey6741FDA9": {
      "Type": "String",
      "Description": "S3 key for asset version \"4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95\""
    },
    "AssetParameters4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95ArtifactHashC7C61526": {
      "Type": "String",
      "Description": "Artifact hash for asset \"4c2a656a8b9cbcf1b9ba62917e3185e6d6438602b99f34dcb2b12fa73a265a95\""
    },
    "AssetParameters2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42S3BucketC2E3CE4E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42\""
    },
    "AssetParameters2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42S3VersionKeyE3DD0FEC": {
      "Type": "String",
      "Description": "S3 key for asset version \"2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42\""
    },
    "AssetParameters2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42ArtifactHash3EA890A2": {
      "Type": "String",
      "Description": "Artifact hash for asset \"2ea5282099a2ede0df5b4b8a49fa1db06809f6a796083534af32c7a561aded42\""
    },
    "AssetParametersab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429feS3Bucket03898B81": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429fe\""
    },
    "AssetParametersab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429feS3VersionKey39232727": {
      "Type": "String",
      "Description": "S3 key for asset version \"ab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429fe\""
    },
    "AssetParametersab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429feArtifactHashF233FE26": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ab67e60f444bf7ddcc88ace67944164cee7d09d3c39bd1cc850e013753e429fe\""
    },
    "AssetParameters8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446S3Bucket6CABC863": {
      "Type": "String",
      "Description": "S3 bucket for asset \"8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446\""
    },
    "AssetParameters8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446S3VersionKey09128DB1": {
      "Type": "String",
      "Description": "S3 key for asset version \"8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446\""
    },
    "AssetParameters8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446ArtifactHash66CEF59F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"8a55d36762c22376c09e2f96af24390fcb6ae2b7b1892247adb15e748f5a5446\""
    },
    "AssetParametersbe8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662cS3Bucket3BFCD5B3": {
      "Type": "String",
      "Description": "S3 bucket for asset \"be8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662c\""
    },
    "AssetParametersbe8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662cS3VersionKeyA8606FFA": {
      "Type": "String",
      "Description": "S3 key for asset version \"be8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662c\""
    },
    "AssetParametersbe8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662cArtifactHash3A8D778A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"be8a9f9fec11f9820b548562b96c4217740429af8624eec3e7e1b382147f662c\""
    },
    "AssetParametersce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37S3BucketE764BD3B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37\""
    },
    "AssetParametersce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37S3VersionKey810256FF": {
      "Type": "String",
      "Description": "S3 key for asset version \"ce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37\""
    },
    "AssetParametersce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37ArtifactHash7B1F1D5D": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ce93efabb2117d817958592048b4f5a218ed49c0c961088244e9fd5b92a73d37\""
    },
    "AssetParameterse715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240S3BucketB8C03864": {
      "Type": "String",
      "Description": "S3 bucket for asset \"e715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240\""
    },
    "AssetParameterse715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240S3VersionKeyBC3B1610": {
      "Type": "String",
      "Description": "S3 key for asset version \"e715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240\""
    },
    "AssetParameterse715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240ArtifactHash71EBF74F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"e715818ff8a2bf666b81dcaa50e2f4189a09c5c65a0393abd38901f7ec536240\""
    },
    "AssetParameters0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890S3Bucket39601392": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890\""
    },
    "AssetParameters0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890S3VersionKeyB904EDA2": {
      "Type": "String",
      "Description": "S3 key for asset version \"0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890\""
    },
    "AssetParameters0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890ArtifactHashF62DFADB": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0e5b305b61a5b29f4bce3d26d53a1050405d8b5ee53bb2ad88ae309a39d81890\""
    },
    "AssetParameters0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72S3Bucket51D038A5": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72\""
    },
    "AssetParameters0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72S3VersionKeyB66B9A0E": {
      "Type": "String",
      "Description": "S3 key for asset version \"0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72\""
    },
    "AssetParameters0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72ArtifactHash2FCCE437": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0f8dfd985131670ed4580f59f8c72ea252a6058a9b96bce8eff1e81e86b2ee72\""
    },
    "AssetParametersbd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5S3BucketF3A8EFB6": {
      "Type": "String",
      "Description": "S3 bucket for asset \"bd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5\""
    },
    "AssetParametersbd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5S3VersionKeyE194165C": {
      "Type": "String",
      "Description": "S3 key for asset version \"bd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5\""
    },
    "AssetParametersbd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5ArtifactHash6DB6197A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"bd8f20a15e40e1983f8c6d18dc4d2e3d3f50e28b535a0d2c872382569685b3a5\""
    },
    "AssetParameters79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4S3Bucket0506E924": {
      "Type": "String",
      "Description": "S3 bucket for asset \"79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4\""
    },
    "AssetParameters79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4S3VersionKeyE06A17E9": {
      "Type": "String",
      "Description": "S3 key for asset version \"79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4\""
    },
    "AssetParameters79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4ArtifactHashC2A54978": {
      "Type": "String",
      "Description": "Artifact hash for asset \"79a05bbca0eb98dc2a78c388d89f2a8dadf2a4efbdf5fc7cb8e7e3e31cdbfea4\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3Bucket4842F32D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A": {
      "Type": "String",
      "Description": "S3 key for asset version \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1ArtifactHash0128B949": {
      "Type": "String",
      "Description": "Artifact hash for asset \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859S3BucketD7F81F31": {
      "Type": "String",
      "Description": "S3 bucket for asset \"531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859\""
    },
    "AssetParameters531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859S3VersionKey37E1CF4B": {
      "Type": "String",
      "Description": "S3 key for asset version \"531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859\""
    },
    "AssetParameters531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859ArtifactHash63FFBD32": {
      "Type": "String",
      "Description": "Artifact hash for asset \"531c300952c4a786f5b3fa88fe7f109e412ed603f70013cb43756d8fed9be859\""
    },
    "AssetParameters168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41bS3Bucket13EDA236": {
      "Type": "String",
      "Description": "S3 bucket for asset \"168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41b\""
    },
    "AssetParameters168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41bS3VersionKey42C4E37A": {
      "Type": "String",
      "Description": "S3 key for asset version \"168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41b\""
    },
    "AssetParameters168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41bArtifactHash9A07139A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"168aa399e3779cc92dde331787656bb7b70159d1954ac5bc0383185e4ae0e41b\""
    },
    "AssetParameters3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54feS3Bucket8687F519": {
      "Type": "String",
      "Description": "S3 bucket for asset \"3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54fe\""
    },
    "AssetParameters3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54feS3VersionKey3C077698": {
      "Type": "String",
      "Description": "S3 key for asset version \"3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54fe\""
    },
    "AssetParameters3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54feArtifactHashD8AA8B36": {
      "Type": "String",
      "Description": "Artifact hash for asset \"3f871ee350c13c6e8cd704229ff598bde6ae4270ca98dd4635b6d14a72db54fe\""
    }
  }
}